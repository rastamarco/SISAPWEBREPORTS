{"remainingRequest":"C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\movimentoCamaraOperador.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\movimentoCamaraOperador.vue","mtime":1613587983062},{"path":"C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613587965760},{"path":"C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js","mtime":1613587964762},{"path":"C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js","mtime":1613587978150},{"path":"C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613587965760},{"path":"C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":1613587979922}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\movimentoCamaraOperador.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch\r\n} from 'vue-property-decorator';\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n@Component\r\nexport default class MovimentoCamaraOperador extends Vue {\r\n  @Action getChambersByFilial\r\n  @Action reportMovimentoCamaraOperador\r\n  @Action noShowReport\r\n\r\n  @Getter showReport\r\n  @Getter filialName\r\n  @Getter allChambers\r\n \r\n  @Prop() clearFields!: any; \r\n\r\n  private codSicop: any | number = null;\r\n  private idChambers: Array<any> = [];\r\n  private selectChambers: boolean = false;\r\n  private rgTypeMove: any = '1';\r\n  private rgShift: any = '4';\r\n  private rgTypeOperation: any = '3';\r\n  private menu: boolean = false;\r\n  private menu2: boolean = false;\r\n  private dateToSend: any = null;\r\n  private date = new Date().toISOString().substr(0, 10);\r\n  private dateFormatted = this.formatDate(new Date().toISOString().substr(0, 10))\r\n  private date2 = new Date().toISOString().substr(0, 10);\r\n  private dateFormatted2 = this.formatDate(new Date().toISOString().substr(0, 10))\r\n  private dateMax = new Date().toISOString().substr(0, 10);\r\n  private isLoadingChambers: boolean = false;\r\n\r\n  @Watch('clearFields')\r\n  public async onPropertyChangedsClearFields(value: any, oldValue: any): Promise < void > {\r\n    this.idChambers.splice(0, this.idChambers.length);\r\n    this.selectChambers = false;\r\n    this.rgTypeOperation = '3';\r\n    this.rgTypeMove = '1';\r\n    this.rgShift = '4';\r\n    this.codSicop = null;\r\n    this.date = new Date().toISOString().substr(0, 10);\r\n    this.date2 = new Date().toISOString().substr(0, 10);\r\n    this.$emit('resetClearFields');\r\n  }\r\n\r\n  @Watch('selectChambers')\r\n  public async onPropertyChangedsChamber(value: any, oldValue: any): Promise < void > {\r\n    if(value === true){\r\n      this.allChambers.forEach(chambers =>{\r\n        this.idChambers.push(chambers.cod_camara);\r\n      });\r\n    }else{\r\n      this.idChambers.splice(0, this.idChambers.length);\r\n    }\r\n  }\r\n\r\n  @Watch('date')\r\n  public async onPropertyChangedsDate(value: any, oldValue: any): Promise < void > {\r\n    this.dateFormatted = this.formatDate(value);  }\r\n\r\n  @Watch('date2')\r\n  public async onPropertyChangedsDate2(value: any, oldValue: any): Promise < void > {\r\n    this.dateFormatted2 = this.formatDate(value);\r\n  }\r\n\r\n  public setDate(data: any): void {\r\n    this.dateToSend = data;\r\n    this.menu = false;\r\n    this.menu2 = false;\r\n  }\r\n\r\n  public formatDate(date: string): any {\r\n    if (!date) return null;\r\n    const [year, month, day] = date.split('-');\r\n    return `${day}/${month}/${year}`;\r\n  }\r\n\r\n  public parseDate(date: any): any {\r\n    if (!date) return null;\r\n\r\n    const [day, month, year] = date.split('/');\r\n    return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\r\n  }\r\n\r\n  public canPrint(): boolean {\r\n    if(this.idChambers !== null){\r\n      return true;\r\n    } else { \r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async Print(): Promise<void> {\r\n    if(this.showReport === true){\r\n      await this.noShowReport({show: false});\r\n    }\r\n    switch(this.rgTypeMove){\r\n    case '1':\r\n      await this.ReportMovimentoCamaraOperador();\r\n      break;\r\n    case '2':\r\n      await this.ReportMovimentoOperador();\r\n      break;\r\n    }\r\n  }\r\n  \r\n  public async ReportMovimentoCamaraOperador(): Promise<void> {\r\n    // Fazer as Validações aqui para cada item enviado \r\n    let initDate = '';\r\n    let finalDate = '';\r\n    if(this.date === this.date2) {\r\n      initDate = this.date;\r\n      finalDate = this.date;\r\n    } else if(this.date > this.date2) {\r\n      this.$swal('Ops!', 'A data Final é menor que a data Inicial.','warning');\r\n      return;\r\n    } else if(this.date < this.date2) {\r\n      initDate = this.date;\r\n      finalDate = this.date2;\r\n    }\r\n    \r\n    // Movimentação por Câmaras\r\n    // Tipo de Operação\r\n    switch(this.rgTypeOperation){\r\n    case '1':\r\n      if(this.rgShift <= 3){\r\n        if (this.haveRegistration() === true){\r\n          await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.codSicop, idReport: 2, reportModule: 2 });\r\n        } else {\r\n          const shifts = this.getShiftToSend();\r\n          console.log(shifts);\r\n          const sendIdReport: any = null;\r\n          if (shifts === '1' || shifts === '2' || shifts === '0'){ \r\n            await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: this.getIdReportChambersArmz(shifts), reportModule: 2 }); \r\n          }\r\n        }\r\n      } else { \r\n        await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 26, reportModule: 2 });\r\n      }\r\n      break;\r\n    case '2':\r\n      if(this.rgShift <= 3){\r\n        if (this.haveRegistration() === true){\r\n          await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.codSicop, idReport: 21, reportModule: 2 });\r\n        } else {\r\n          const shifts = this.getShiftToSend();\r\n          const sendIdReport: any = null;\r\n          if (shifts === '1' || shifts === '2' || shifts === '0'){  \r\n            await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: this.getIdReportChambersExp(shifts), reportModule: 2 });\r\n          }\r\n        }\r\n      } else { \r\n        await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 27, reportModule: 2 });\r\n      }\r\n      break;\r\n    case '3':\r\n      if (this.haveRegistration() === true){\r\n        await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.codSicop, idReport: 23, reportModule: 2 });\r\n      } else {\r\n        const shifts = this.getShiftToSend();\r\n        const sendIdReport: any = null;\r\n        if (shifts === '1' || shifts === '2' || shifts === '0'){ \r\n          await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: this.getIdReportChambers(shifts), reportModule: 2 });\r\n        } else {\r\n          await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 22, reportModule: 2 });\r\n        }   \r\n      }\r\n      break;\r\n    }\r\n    this.closeModal();\r\n  }\r\n\r\n  public async ReportMovimentoOperador(): Promise<void> {\r\n    let initDate = '';\r\n    let finalDate = '';\r\n    if(this.date === this.date2) {\r\n      initDate = this.date;\r\n      finalDate = this.date;\r\n    } else if(this.date > this.date2) {\r\n      this.$swal('Ops!', 'A data Final é menor que a data Inicial.','warning');\r\n      return;\r\n    } else if(this.date < this.date2) {\r\n      initDate = this.date;\r\n      finalDate = this.date2;\r\n    }\r\n    switch(this.rgTypeOperation){\r\n    case '1':\r\n      if (this.haveRegistration() === true){\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.codSicop, idReport: 2, reportModule: 2 });\r\n      } else {\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 28, reportModule: 2 }); \r\n      }\r\n      break;\r\n    case '2':\r\n      if (this.haveRegistration() === true){\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.codSicop, idReport: 21, reportModule: 2 });\r\n        \r\n      } else {\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 29, reportModule: 2 }); \r\n      }\r\n      break;\r\n    case '3':\r\n      if (this.haveRegistration() === true){\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.codSicop, idReport: 23, reportModule: 2 });\r\n      } else {\r\n        const shifts = this.getShiftToSend();\r\n        const sendIdReport: any = null;\r\n        if (shifts === '1' || shifts === '2' || shifts === '0'){ \r\n          // Mandar com turno\r\n          await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, shift: shifts, idReport: this.getIdReportOperador(shifts), reportModule: 2 }); \r\n        } else { \r\n          await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 3, reportModule: 2 }); \r\n        }\r\n         \r\n      }\r\n      break;\r\n    }\r\n    this.closeModal();\r\n  }\r\n\r\n  public getShiftToSend(): any{\r\n    switch(this.rgShift){\r\n    case '1': \r\n      return '1';\r\n    case '2': \r\n      return '2';\r\n    case '3': \r\n      return '0';\r\n    case '4': \r\n      return '';\r\n    }\r\n  }\r\n\r\n  public haveRegistration(): boolean{\r\n    if (this.codSicop !== null){\r\n      return true;\r\n    } else { \r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getIdReportOperador(shifts): any{\r\n    switch(shifts){\r\n    case '1': \r\n      return 31;\r\n    case '2':\r\n      return 32;\r\n    case '0': \r\n      return 33;\r\n    }\r\n  }\r\n\r\n  public getIdReportChambers(shifts): any{\r\n    switch(shifts){\r\n    case '1': \r\n      return 34;\r\n    case '2':\r\n      return 35;\r\n    case '0': \r\n      return 36;\r\n    }\r\n  }\r\n\r\n  public getIdReportChambersArmz(shifts): any{\r\n    switch(shifts){\r\n    case '1': \r\n      return 24;\r\n    case '2':\r\n      return 37;\r\n    case '0': \r\n      return 38;\r\n    }\r\n  }\r\n\r\n  public getIdReportChambersExp(shifts): any{\r\n    switch(shifts){\r\n    case '1': \r\n      return 25;\r\n    case '2':\r\n      return 39;\r\n    case '0': \r\n      return 4;\r\n    }\r\n  }\r\n\r\n  public async closeModal(): Promise<void> {\r\n    this.$emit('closeModal');\r\n  }\r\n\r\n  async mounted() {\r\n    if (this.allChambers === null) {\r\n      this.isLoadingChambers = true;\r\n      await this.getChambersByFilial({filial: this.filialName });\r\n      this.isLoadingChambers = false;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}]}