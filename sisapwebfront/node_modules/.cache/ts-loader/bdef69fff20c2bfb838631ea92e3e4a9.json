{"remainingRequest":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\movimentoCamaraOperador.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\movimentoCamaraOperador.vue","mtime":1608316086984},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\movimentoCamaraOperador.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch\r\n} from 'vue-property-decorator';\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n@Component\r\nexport default class MovimentoCamaraOperador extends Vue {\r\n  @Action getChambersByFilial\r\n\r\n  @Getter filialName\r\n  @Getter allChambers\r\n \r\n  @Prop() clearFields!: any; \r\n\r\n  private codSicop: any | number = null;\r\n  private idChambers: Array<any> = [];\r\n  private selectChambers: boolean = false;\r\n  private rgTypeMove: any = '1';\r\n  private rgShift: any = '4';\r\n  private rgTypeOperation: any = '3';\r\n  private menu: boolean = false;\r\n  private menu2: boolean = false;\r\n  private dateToSend: any = null;\r\n  private date = new Date().toISOString().substr(0, 10);\r\n  private dateFormatted = this.formatDate(new Date().toISOString().substr(0, 10))\r\n  private date2 = new Date().toISOString().substr(0, 10);\r\n  private dateFormatted2 = this.formatDate(new Date().toISOString().substr(0, 10))\r\n  private dateMax = new Date().toISOString().substr(0, 10);\r\n  private isLoadingChambers: boolean = false;\r\n\r\n  @Watch('clearFields')\r\n  public async onPropertyChangedsClearFields(value: any, oldValue: any): Promise < void > {\r\n    this.idChambers.splice(0, this.idChambers.length);\r\n    this.selectChambers = false;\r\n    this.rgTypeOperation = '3';\r\n    this.rgTypeMove = '1';\r\n    this.rgShift = '4';\r\n    this.codSicop = null;\r\n    this.date = new Date().toISOString().substr(0, 10);\r\n    this.date2 = new Date().toISOString().substr(0, 10);\r\n    this.InitialParameters();\r\n    this.$emit('resetClearFields');\r\n  }\r\n\r\n  @Watch('selectChambers')\r\n  public async onPropertyChangedsChamber(value: any, oldValue: any): Promise < void > {\r\n    if(value === true){\r\n      this.allChambers.forEach(chambers =>{\r\n        this.idChambers.push(chambers.cod_camara);\r\n      });\r\n    }else{\r\n      this.idChambers.splice(0, this.idChambers.length);\r\n    }\r\n  }\r\n\r\n  @Watch('date')\r\n  public async onPropertyChangedsDate(value: any, oldValue: any): Promise < void > {\r\n    this.dateFormatted = this.formatDate(value);\r\n    this.$emit('getInitialDate', value);\r\n  }\r\n\r\n  @Watch('date2')\r\n  public async onPropertyChangedsDate2(value: any, oldValue: any): Promise < void > {\r\n    this.dateFormatted2 = this.formatDate(value);\r\n    this.$emit('getEndDate', value);\r\n  }\r\n\r\n  @Watch('rgShift')\r\n  public async onPropertyChangedsShift(value: any, oldValue: any): Promise < void > {\r\n    this.$emit('getShift', value);\r\n  }\r\n\r\n  @Watch('rgTypeMove')\r\n  public async onPropertyChangedsMovement(value: any, oldValue: any): Promise < void > {\r\n    this.$emit('getMovement', value);\r\n  }\r\n\r\n  @Watch('rgTypeOperation')\r\n  public async onPropertyChangedsOperation(value: any, oldValue: any): Promise < void > {\r\n    this.$emit('getOperation', value);\r\n  }\r\n\r\n  @Watch('idChambers')\r\n  public async onPropertyChangedsChambers(value: any, oldValue: any): Promise < void > {\r\n    if(value.length !== 0) {\r\n      this.$emit('getIdChambers', value);\r\n    }else { \r\n      this.$emit('getIdChambers', null);\r\n    }\r\n  }\r\n\r\n  public SendCodSicop(cod: any): void{\r\n    this.$emit('getCodSicop', cod);\r\n  }\r\n\r\n  public setDate(data: any): void {\r\n    this.dateToSend = data;\r\n    this.menu = false;\r\n    this.menu2 = false;\r\n  }\r\n\r\n  public formatDate(date: string): any {\r\n    if (!date) return null;\r\n    const [year, month, day] = date.split('-');\r\n    return `${day}/${month}/${year}`;\r\n  }\r\n\r\n  public parseDate(date: any): any {\r\n    if (!date) return null;\r\n\r\n    const [day, month, year] = date.split('/');\r\n    return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\r\n  }\r\n\r\n  public InitialParameters(): void{\r\n    this.$emit('getCodSicop', null);\r\n    this.$emit('getOperation', '3');\r\n    this.$emit('getMovement', '1');\r\n    this.$emit('getShift', '4');\r\n    this.$emit('getInitialDate', this.date);\r\n    this.$emit('getEndDate', this.date2);\r\n  }\r\n  \r\n  async mounted() {\r\n    if (this.allChambers === null) {\r\n      this.isLoadingChambers = true;\r\n      await this.getChambersByFilial({filial: this.filialName });\r\n      this.isLoadingChambers = false;\r\n    }\r\n    this.InitialParameters();\r\n  }\r\n}\r\n"],"sourceRoot":""}]}