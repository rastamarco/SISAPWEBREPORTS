{"remainingRequest":"C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistImpressaoEtiquetas\\Relatorios\\Parametros\\etiquetasPallets.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistImpressaoEtiquetas\\Relatorios\\Parametros\\etiquetasPallets.vue","mtime":1613587983069},{"path":"C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613587965760},{"path":"C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js","mtime":1613587964762},{"path":"C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js","mtime":1613587978150},{"path":"C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613587965760},{"path":"C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":1613587979922}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\Desktop\\SISAP Web Reports\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistImpressaoEtiquetas\\Relatorios\\Parametros\\etiquetasPallets.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch\r\n} from 'vue-property-decorator';\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n@Component\r\nexport default class EtiquetasPallets extends Vue {\r\n  @Prop() clearFields!: any; \r\n\r\n  @Action getAllProviders\r\n  @Action noShowReport\r\n  @Action reportEtiquetaPallet\r\n\r\n  @Getter allProviders\r\n  @Getter loadingProviders\r\n  @Getter filialName\r\n  @Getter showReport\r\n\r\n  private nrPlaca: string = '';\r\n  private provider: any = null;\r\n  private nrNote: any = null;\r\n  private providerName: any = null;\r\n  private idProvider: any = null;\r\n\r\n  public Clear(): void{\r\n    this.nrPlaca = '';\r\n    this.provider = null;\r\n    this.nrNote = null;\r\n  }\r\n  \r\n  @Watch('clearFields')\r\n  public async onPropertyChangeds(value: any, oldValue: any): Promise < void > {\r\n    this.Clear();\r\n    this.$emit('resetClearFields');\r\n  }\r\n\r\n  @Watch('nrPlaca')\r\n  public async onPropertyChangedNrPlaca(value: any, oldValue: any): Promise < void > {\r\n    this.nrPlaca = value.toUpperCase();\r\n  }\r\n\r\n  @Watch('provider')\r\n  public async onPropertyChangedProvider(value: any, oldValue: any): Promise < void > {\r\n    for(let i = 0; i< this.allProviders.length; i++) {\r\n      if(this.allProviders[i].cod_Fornecedor === value){\r\n        this.providerName = this.allProviders[i].desc_Fornecedor;\r\n      }\r\n    }\r\n    this.getProvider(value, this.providerName);\r\n  }\r\n\r\n  public getProvider(idProvider: any, providerName: any): void{\r\n    this.idProvider = idProvider;\r\n    this.providerName = providerName;\r\n  }\r\n\r\n  public toUpper(placa: any): any {\r\n    return placa.toUpperCase();\r\n  }\r\n\r\n  public closeModal(): void {\r\n    this.$emit('closeModal');\r\n  }\r\n\r\n  public canPrint(): boolean {\r\n    if (this.nrPlaca.length === 8 && this.idProvider !== null && this.nrNote !== null){\r\n      return true;\r\n    } else { \r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async Print(): Promise < void > {\r\n    if(this.showReport === true){\r\n      await this.noShowReport({show: false});\r\n    }\r\n    await this.EtiquetasPallets();\r\n    this.closeModal();\r\n  }\r\n\r\n  public async EtiquetasPallets(): Promise<void>{\r\n    await this.reportEtiquetaPallet({\r\n      idProvider: this.idProvider, providerName: this.providerName, \r\n      nrPlaca: this.nrPlaca, nrNote: this.nrNote, idReport: 1, reportModule: 5 });\r\n  }\r\n\r\n  async mounted(){\r\n    if (this.allProviders === null){\r\n      await this.getAllProviders({filialName: this.filialName});\r\n    }\r\n    \r\n  }\r\n  \r\n}\r\n"],"sourceRoot":""}]}