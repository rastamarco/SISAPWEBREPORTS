{"remainingRequest":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\dataInicialFinal.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\dataInicialFinal.vue","mtime":1610731120599},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\dataInicialFinal.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch\r\n} from 'vue-property-decorator';\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n@Component\r\nexport default class DataInicialDataFinal extends Vue {\r\n  @Prop() clearFields!: any; \r\n\r\n  @Action noShowReport\r\n  @Action reportEntradaSaidaTunelCongelamentoExp\r\n  @Action reportCargasEmbarcadas\r\n  @Action ReportPalletsEmCamaraC\r\n  \r\n  @Getter showReport\r\n  @Getter filialName\r\n  @Getter box\r\n\r\n  private menu: boolean = false;\r\n  private menu2: boolean = false;\r\n  private date = new Date().toISOString().substr(0, 10);\r\n  private dateFormatted = this.formatDate(new Date().toISOString().substr(0, 10));\r\n  private date2 = new Date().toISOString().substr(0, 10);\r\n  private dateFormatted2 = this.formatDate(new Date().toISOString().substr(0, 10));\r\n  private dateMax = new Date().toISOString().substr(0, 10);\r\n\r\n  public Clear(): void{\r\n    this.date = new Date().toISOString().substr(0, 10);\r\n    this.date2 = new Date().toISOString().substr(0, 10);\r\n  }\r\n\r\n   @Watch('clearFields')\r\n  public async onPropertyChangedsClearFields(value: any, oldValue: any): Promise < void > {\r\n    this.Clear();\r\n    this.$emit('resetClearFields');\r\n  }\r\n\r\n   @Watch('date')\r\n   public async onPropertyChangedsDate(value: any, oldValue: any): Promise < void > {\r\n     this.dateFormatted = this.formatDate(value);\r\n   }\r\n\r\n   @Watch('date2')\r\n   public async onPropertyChangedsDateEnd(value: any, oldValue: any): Promise < void > {\r\n     this.dateFormatted2 = this.formatDate(value);\r\n   }\r\n\r\n   public setDate(): void {\r\n     this.menu = false;\r\n     this.menu2 = false;\r\n   }\r\n\r\n   public addDay(date: string): any {\r\n     if (!date) return null;\r\n     const [year, month, day] = date.split('-');\r\n     return `${year}/${month}/${parseInt(day)+1}`;\r\n   }\r\n\r\n   public formatDate(date: string): any {\r\n     if (!date) return null;\r\n     const [year, month, day] = date.split('-');\r\n     return `${day}/${month}/${year}`;\r\n   }\r\n\r\n   public parseDate(date: any): any {\r\n     if (!date) return null;\r\n\r\n     const [day, month, year] = date.split('/');\r\n     return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\r\n   }\r\n\r\n   public async Print(): Promise < void > {\r\n     if(this.showReport === true){\r\n       await this.noShowReport({show: false});\r\n     }\r\n     switch (this.box){\r\n     case 11: \r\n       await this.ReportEntradaSaidaTunelExp();\r\n       break;\r\n     case 12: \r\n       await this.ReportCargasEmbarcadas();\r\n       break;\r\n     case 14: \r\n       await this.ReportPalletsCamaraC();\r\n       break;\r\n     }\r\n     this.closeModal();\r\n   }\r\n\r\n   public async ReportEntradaSaidaTunelExp(): Promise < void > {\r\n     let initDate = '';\r\n     let finalDate = '';\r\n     initDate = this.date;\r\n     finalDate = this.addDay(this.date);\r\n     await this.reportEntradaSaidaTunelCongelamentoExp({ initialDate: initDate, endDate: finalDate, idReport: 60, reportModule: 2});\r\n   }\r\n\r\n   public async ReportCargasEmbarcadas(): Promise<void> {\r\n     let initDate = '';\r\n     let finalDate = '';\r\n     if(this.date === this.date2) {\r\n       initDate = this.date;\r\n       finalDate = this.date;\r\n     } else if(this.date > this.date2) {\r\n       this.$swal('Ops!', 'A data Final é menor que a data Inicial.','warning');\r\n       return;\r\n     } else if(this.date < this.date2) {\r\n       initDate = this.date;\r\n       finalDate = this.date2;\r\n     }\r\n     await this.reportCargasEmbarcadas({ initialDate: initDate, endDate: finalDate, idReport: 61, reportModule: 2});\r\n   }\r\n\r\n   public async ReportPalletsCamaraC(): Promise < void > {\r\n     await this.ReportPalletsEmCamaraC({ initialDate: this.date, endDate: this.date2, idReport: 64, reportModule: 2 });\r\n   }\r\n\r\n   public closeModal(): void {\r\n     this.Clear();\r\n     this.$emit('closeModal');\r\n   }\r\n} \r\n"],"sourceRoot":""}]}