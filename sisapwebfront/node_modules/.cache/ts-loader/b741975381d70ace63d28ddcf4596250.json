{"remainingRequest":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\dataInicialFinal.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\dataInicialFinal.vue","mtime":1610720045781},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\dataInicialFinal.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch\r\n} from 'vue-property-decorator';\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n@Component\r\nexport default class DataInicialDataFinal extends Vue {\r\n  @Prop() clearFields!: any; \r\n\r\n  @Action noShowReport\r\n  @Action reportEntradaSaidaTunelCongelamentoExp\r\n  @Action reportCargasEmbarcadas\r\n\r\n  @Getter showReport\r\n  @Getter filialName\r\n  @Getter box\r\n\r\n  private menu: boolean = false;\r\n  private menu2: boolean = false;\r\n  private date = new Date().toISOString().substr(0, 10);\r\n  private dateFormatted = this.formatDate(new Date().toISOString().substr(0, 10));\r\n  private date2 = new Date().toISOString().substr(0, 10);\r\n  private dateFormatted2 = this.formatDate(new Date().toISOString().substr(0, 10));\r\n  private dateMax = new Date().toISOString().substr(0, 10);\r\n\r\n  public Clear(): void{\r\n    this.dateFormatted = new Date().toISOString().substr(0, 10);\r\n    this.date = new Date().toISOString().substr(0, 10);\r\n    this.dateFormatted2 = new Date().toISOString().substr(0, 10);\r\n    this.date2 = new Date().toISOString().substr(0, 10);\r\n  }\r\n\r\n   @Watch('clearFields')\r\n  public async onPropertyChangedsClearFields(value: any, oldValue: any): Promise < void > {\r\n    this.Clear();\r\n    this.$emit('resetClearFields');\r\n  }\r\n\r\n   @Watch('date')\r\n   public async onPropertyChangedsDate(value: any, oldValue: any): Promise < void > {\r\n     this.dateFormatted = this.formatDate(value);\r\n   }\r\n\r\n   @Watch('date2')\r\n   public async onPropertyChangedsDateEnd(value: any, oldValue: any): Promise < void > {\r\n     this.dateFormatted2 = this.formatDate(value);\r\n   }\r\n\r\n   public setDate(): void {\r\n     this.menu = false;\r\n     this.menu2 = false;\r\n   }\r\n\r\n   public addDay(date: string): any {\r\n     if (!date) return null;\r\n     const [year, month, day] = date.split('-');\r\n     return `${year}/${month}/${parseInt(day)+1}`;\r\n   }\r\n\r\n   public formatDate(date: string): any {\r\n     if (!date) return null;\r\n     const [year, month, day] = date.split('-');\r\n     return `${day}/${month}/${year}`;\r\n   }\r\n\r\n   public parseDate(date: any): any {\r\n     if (!date) return null;\r\n\r\n     const [day, month, year] = date.split('/');\r\n     return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\r\n   }\r\n\r\n   public async Print(): Promise < void > {\r\n     if(this.showReport === true){\r\n       await this.noShowReport({show: false});\r\n     }\r\n     switch (this.box){\r\n     case 11: \r\n       await this.ReportEntradaSaidaTunelExp();\r\n       break;\r\n     case 12: \r\n       await this.ReportCargasEmbarcadas();\r\n       break;\r\n     }\r\n     this.closeModal();\r\n   }\r\n\r\n   public async ReportEntradaSaidaTunelExp(): Promise < void > {\r\n     let initDate = '';\r\n     let finalDate = '';\r\n     initDate = this.date;\r\n     finalDate = this.addDay(this.date);\r\n     await this.reportEntradaSaidaTunelCongelamentoExp({ initialDate: initDate, endDate: finalDate, idReport: 60, reportModule: 2});\r\n   }\r\n\r\n   public async ReportCargasEmbarcadas(): Promise<void> {\r\n     let initDate = '';\r\n     let finalDate = '';\r\n     if(this.date === this.date2) {\r\n       initDate = this.date;\r\n       finalDate = this.date;\r\n     } else if(this.date > this.date2) {\r\n       this.$swal('Ops!', 'A data Final é menor que a data Inicial.','warning');\r\n       return;\r\n     } else if(this.date < this.date2) {\r\n       initDate = this.date;\r\n       finalDate = this.date2;\r\n     }\r\n     await this.reportCargasEmbarcadas({ initialDate: initDate, endDate: finalDate, idReport: 61, reportModule: 2});\r\n   }\r\n\r\n   public closeModal(): void {\r\n     this.Clear();\r\n     this.$emit('closeModal');\r\n   }\r\n} \r\n"],"sourceRoot":""}]}