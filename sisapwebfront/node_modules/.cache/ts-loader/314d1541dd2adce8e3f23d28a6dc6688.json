{"remainingRequest":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistAgendamentoDeCargas\\Relatorios\\Parametros\\agendamentosSemEmbarqueCargas.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistAgendamentoDeCargas\\Relatorios\\Parametros\\agendamentosSemEmbarqueCargas.vue","mtime":1613587983038},{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613587965760},{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js","mtime":1613587964762},{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js","mtime":1613587978150},{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613587965760},{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":1613587979922}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistAgendamentoDeCargas\\Relatorios\\Parametros\\agendamentosSemEmbarqueCargas.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch\r\n} from 'vue-property-decorator';\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n@Component\r\nexport default class AgendamentosSemEmbarqueCargas extends Vue {\r\n  @Prop() clearFields!: any; \r\n\r\n  @Action noShowReport\r\n  @Action reportAgendamentoSemEmbarque\r\n\r\n  @Getter showReport\r\n\r\n  private date: any = new Date().toISOString().substr(0, 10) ;\r\n  private menu: boolean = false;\r\n  private dateMax = new Date().toISOString().substr(0, 10);\r\n  private dateFormatted = this.formatDate(new Date().toISOString().substr(0, 10))\r\n  private date2: any = new Date().toISOString().substr(0, 10) ;\r\n  private menu2: boolean = false;\r\n  private dateFormatted2 = this.formatDate(new Date().toISOString().substr(0, 10))\r\n  \r\n  @Watch('clearFields')\r\n  public async onPropertyChangeds(value: any, oldValue: any): Promise < void > {\r\n    this.date = new Date().toISOString().substr(0, 10);\r\n    this.date2 = new Date().toISOString().substr(0, 10);\r\n    this.$emit('resetClearFields');\r\n  }\r\n\r\n  @Watch('date')\r\n  public async onPropertyChangedsDate(value: any, oldValue: any): Promise < void > {\r\n    this.dateFormatted = this.formatDate(value);\r\n  }\r\n\r\n  @Watch('date2')\r\n  public async onPropertyChangedsDate2(value: any, oldValue: any): Promise < void > {\r\n    this.dateFormatted2 = this.formatDate(value);\r\n  }\r\n  \r\n  public formatDate(date: string): any {\r\n    if (!date) return null;\r\n    const [year, month, day] = date.split('-');\r\n    return `${day}/${month}/${year}`;\r\n  }\r\n\r\n  public parseDate(date: any): any {\r\n    if (!date) return null;\r\n    const [day, month, year] = date.split('/');\r\n    return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\r\n  }\r\n\r\n  public SendDate(): void {\r\n    this.menu = false;\r\n  }\r\n\r\n  public SendDate2(): void {\r\n    this.menu2 = false;\r\n  }\r\n\r\n  public async Print(): Promise < void > {\r\n    if(this.showReport === true){\r\n      await this.noShowReport({show: false});\r\n    }\r\n    await this.AgendamentoSemEmbarques();\r\n    this.closeModal();\r\n  }\r\n\r\n  public closeModal(): void {\r\n    this.$emit('closeModal');\r\n  }\r\n\r\n  public async AgendamentoSemEmbarques(): Promise<void>{\r\n    await this.reportAgendamentoSemEmbarque({initialDate: this.date, endDate: this.date2, idReport: 1, reportModule:6 });\r\n  }\r\n \r\n}\r\n"],"sourceRoot":""}]}