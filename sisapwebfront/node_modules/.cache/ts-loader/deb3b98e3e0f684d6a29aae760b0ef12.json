{"remainingRequest":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\inputModalExp.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\inputModalExp.vue","mtime":1608831109817},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\inputModalExp.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch\r\n} from 'vue-property-decorator';\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n\r\nimport formacaoPallet from '../Relatorios/Parametros/formacaoPallet.vue';\r\nimport movimentoCamaraOperador from '../Relatorios/Parametros/movimentoCamaraOperador.vue';\r\nimport mapaCamara from '../Relatorios/Parametros/mapaCamaras.vue';\r\n\r\n@Component ({\r\n  components: {\r\n    formacaoPallet,\r\n    movimentoCamaraOperador,\r\n    mapaCamara\r\n  }\r\n})\r\nexport default class InputModalsExp extends Vue {\r\n  @Prop() nameBox!: any\r\n  @Prop() idBox!: any;\r\n\r\n  @Action reportFormacaoPallets\r\n  @Action setSelectedIdReport\r\n  @Action reportMovimentoCamaraOperador\r\n  @Action noShowReport\r\n  \r\n  @Getter filialName\r\n  @Getter userFeatures\r\n  @Getter showReport\r\n\r\n  private dateToSend: any = null;\r\n  private turnoGroup: any = 1;\r\n  private periodoGroup: any = 1;\r\n  private nrPallet: any = null;\r\n  private clearFields: boolean = false;\r\n  private idChambers: any = null;\r\n  private InitialDate: any = null;\r\n  private EndDate: any = null;\r\n  private CodSicop: any = null;\r\n  private Operation: any = null;\r\n  private Movement: any = null;\r\n  private Shift: any = null;\r\n  \r\n  public getNrPallet(nrPallet: any): void {\r\n    this.nrPallet = nrPallet;\r\n  }\r\n\r\n  public getIdChambers(idChambers: any): void{\r\n    this.idChambers = idChambers;\r\n  }\r\n\r\n  public getCodSicop(codSicop: any): void{\r\n    this.CodSicop = codSicop;\r\n  }\r\n\r\n  public getOperation(operation: any): void{\r\n    this.Operation = operation;\r\n  }\r\n\r\n  public getMovement(movement: any): void{\r\n    this.Movement = movement;\r\n  }\r\n\r\n  public getShift(shift: any): void{\r\n    this.Shift = shift;\r\n  }\r\n\r\n  public getInitialDate(initialDate: any): void{\r\n    this.InitialDate = initialDate;\r\n  }\r\n\r\n  public getEndDate(endDate: any): void{\r\n    this.EndDate = endDate;\r\n  }\r\n\r\n  public canPrint(): boolean {\r\n    switch(this.idBox){\r\n    case 1:\r\n      if(this.nrPallet !== null && this.nrPallet !== ''){\r\n        return true;\r\n      } else { \r\n        return false;\r\n      }\r\n    case 2:\r\n      if(this.idChambers !== null){\r\n        return true;\r\n      } else { \r\n        return false;\r\n      }\r\n    default: \r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addDay(date: string): any {\r\n    if (!date) return null;\r\n    const [year, month, day] = date.split('-');\r\n    return `${year}-${month}-${parseInt(day)+1}`;\r\n  }\r\n\r\n  public resetClearFields(): void{\r\n    this.clearFields = false;\r\n  }\r\n\r\n  public async closeModal(): Promise<void> {\r\n    this.clearFields = true;\r\n    this.$emit('closeModal');\r\n  }\r\n\r\n  public async Print(): Promise < void > {\r\n    if(this.showReport === true){\r\n      await this.noShowReport({show: false});\r\n    }\r\n    switch(this.idBox){\r\n    case 1:\r\n      await this.ReportFormacaoPallet(this.nrPallet);\r\n      break;\r\n    case 2:\r\n      await this.ReportMovimentoCamaraOperador();\r\n      break;\r\n    case 3:\r\n      await this.ReportMapaCamaras();\r\n      break;  \r\n    }\r\n  }\r\n\r\n  public async ReportFormacaoPallet(nrPallet: any): Promise<void> {\r\n    await this.reportFormacaoPallets({ \r\n      idReport: 1,\r\n      nrPallet: nrPallet,\r\n      reportModule: 2\r\n    });\r\n    this.closeModal();\r\n  } \r\n\r\n  public async ReportMovimentoCamaraOperador(): Promise<void> {\r\n    // Fazer as Validações aqui para cada item enviado \r\n    let initDate = '';\r\n    let finalDate = '';\r\n    if(this.InitialDate === this.EndDate) {\r\n      initDate = this.InitialDate;\r\n      finalDate = this.InitialDate;\r\n    } else if(this.InitialDate > this.EndDate) {\r\n      this.$swal('Ops!', 'A data Final é menor que a data Inicial.','warning');\r\n      return;\r\n    } else if(this.InitialDate < this.EndDate) {\r\n      initDate = this.InitialDate;\r\n      finalDate = this.EndDate;\r\n    }\r\n    switch(this.Movement){\r\n    case '1':\r\n      // Movimentação por Câmaras\r\n      // Tipo de Operação\r\n      switch(this.Operation){\r\n      case '1':\r\n        if(this.Shift < 3){\r\n          if (this.haveRegistration() === true){\r\n            await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 2, reportModule: 2 });\r\n          } else {\r\n            await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, shift: this.getShiftToSend(), idReport: 24, reportModule: 2 }); \r\n          }\r\n        } else { \r\n          await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 26, reportModule: 2 });\r\n        }\r\n        break;\r\n      case '2':\r\n        if(this.Shift < 3){\r\n          if (this.haveRegistration() === true){\r\n            await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 21, reportModule: 2 });\r\n          } else { \r\n            await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, shift: this.getShiftToSend(), idReport: 25, reportModule: 2 });\r\n          }\r\n        } else { \r\n          await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 27, reportModule: 2 });\r\n        }\r\n        break;\r\n      case '3':\r\n        if (this.haveRegistration() === true){\r\n          await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 23, reportModule: 2 });\r\n        } else { \r\n          await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 22, reportModule: 2 });\r\n        }\r\n        break;\r\n      }\r\n      this.closeModal();\r\n      break;\r\n    case '2':\r\n      // Movimentação por Operador\r\n      this.ReportMovimentoOperador();\r\n      break;\r\n    } \r\n  }\r\n\r\n  public async ReportMovimentoOperador(): Promise<void> {\r\n    let initDate = '';\r\n    let finalDate = '';\r\n    if(this.InitialDate === this.EndDate) {\r\n      initDate = this.InitialDate;\r\n      finalDate = this.InitialDate;\r\n    } else if(this.InitialDate > this.EndDate) {\r\n      this.$swal('Ops!', 'A data Final é menor que a data Inicial.','warning');\r\n      return;\r\n    } else if(this.InitialDate < this.EndDate) {\r\n      initDate = this.InitialDate;\r\n      finalDate = this.EndDate;\r\n    }\r\n    switch(this.Operation){\r\n    case '1':\r\n      if (this.haveRegistration() === true){\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 2, reportModule: 2 });\r\n      } else {\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 28, reportModule: 2 }); \r\n      }\r\n      break;\r\n    case '2':\r\n      if (this.haveRegistration() === true){\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 21, reportModule: 2 });\r\n        \r\n      } else {\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 29, reportModule: 2 }); \r\n      }\r\n      break;\r\n    case '3':\r\n      if (this.haveRegistration() === true){\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 23, reportModule: 2 });\r\n      } else {\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 3, reportModule: 2 }); \r\n      }\r\n      break;\r\n    }\r\n    this.closeModal();\r\n  }\r\n\r\n  public async ReportMapaCamaras(): Promise<void>{\r\n    // Pensar em algo para verificação das câmaras\r\n  }\r\n\r\n  public getShiftToSend(): any{\r\n    switch(this.Shift){\r\n    case '1': \r\n      return '1';\r\n    case '2': \r\n      return '2';\r\n    case '3': \r\n      return '0';\r\n    case '4': \r\n      return '';\r\n    }\r\n  }\r\n\r\n  public haveRegistration(): boolean{\r\n    if (this.CodSicop !== null){\r\n      return true;\r\n    } else { \r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}]}