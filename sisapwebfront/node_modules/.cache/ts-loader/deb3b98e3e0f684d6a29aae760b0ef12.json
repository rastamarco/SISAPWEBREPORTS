{"remainingRequest":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\inputModalExp.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\inputModalExp.vue","mtime":1610138869970},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\inputModalExp.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;;;;AAmCA,SACE,SADF,EAEE,GAFF,EAGE,IAHF,EAIE,KAJF,QAKO,wBALP;AAMA,SACE,MADF,EACU,MADV,QAEO,YAFP;AAIA,OAAO,cAAP,MAA2B,6CAA3B;AACA,OAAO,uBAAP,MAAoC,sDAApC;AACA,OAAO,UAAP,MAAuB,0CAAvB;AACA,OAAO,kBAAP,MAA+B,kDAA/B;AACA,OAAO,qBAAP,MAAkC,oDAAlC;;AAWA,IAAqB,cAArB;AAAA;;AAAA;;AAAA,4BAAA;AAAA;;AAAA;;;AAiBU,UAAA,UAAA,GAAkB,IAAlB;AACA,UAAA,UAAA,GAAkB,CAAlB;AACA,UAAA,YAAA,GAAoB,CAApB;AACA,UAAA,QAAA,GAAgB,IAAhB;AACA,UAAA,WAAA,GAAuB,KAAvB;AACA,UAAA,UAAA,GAAkB,IAAlB;AACA,UAAA,WAAA,GAAmB,IAAnB;AACA,UAAA,OAAA,GAAe,IAAf;AACA,UAAA,QAAA,GAAgB,IAAhB;AACA,UAAA,SAAA,GAAiB,IAAjB;AACA,UAAA,QAAA,GAAgB,IAAhB;AACA,UAAA,KAAA,GAAa,IAAb;AACA,UAAA,QAAA,GAAoB,KAApB;AACA,UAAA,MAAA,GAAc,IAAd,CA9BV,CA4ZE;;AA5ZF;AA6ZC,GA7ZD,CAgCE;;;AAhCF;AAAA;AAAA,gCAiCqB,QAjCrB,EAiCkC;AAC9B,WAAK,QAAL,GAAgB,QAAhB;AACD;AAnCH;AAAA;AAAA,kCAqCuB,UArCvB,EAqCsC;AAClC,WAAK,UAAL,GAAkB,UAAlB;AACD;AAvCH;AAAA;AAAA,gCAyCqB,QAzCrB,EAyCkC;AAC9B,WAAK,QAAL,GAAgB,QAAhB;AACD;AA3CH;AAAA;AAAA,iCA6CsB,SA7CtB,EA6CoC;AAChC,WAAK,SAAL,GAAiB,SAAjB;AACD;AA/CH;AAAA;AAAA,gCAiDqB,QAjDrB,EAiDkC;AAC9B,WAAK,QAAL,GAAgB,QAAhB;AACD;AAnDH;AAAA;AAAA,6BAqDkB,KArDlB,EAqD4B;AACxB,WAAK,KAAL,GAAa,KAAb;AACD;AAvDH;AAAA;AAAA,mCAyDwB,WAzDxB,EAyDwC;AACpC,WAAK,WAAL,GAAmB,WAAnB;AACD;AA3DH;AAAA;AAAA,+BA6DoB,OA7DpB,EA6DgC;AAC5B,WAAK,OAAL,GAAe,OAAf;AACD;AA/DH;AAAA;AAAA,sCAiE2B,QAjE3B,EAiEwC;AACpC,WAAK,QAAL,GAAgB,QAAhB;AACD;AAnEH;AAAA;AAAA,8BAqEmB,MArEnB,EAqE8B;AAC1B,WAAK,MAAL,GAAc,MAAd;AACD;AAvEH;AAAA;AAAA;AAAA,8GA0EuC,KA1EvC,EA0EmD,QA1EnD;AAAA;AAAA;AAAA;AAAA;AA2EI,gBAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AA3EJ,8BA4EW,KA5EX;AAAA,gDA6ES,CA7ET;AAAA;;AAAA;AA8EM,qBAAK,UAAL;AA9EN;AAAA,uBA+EY,KAAK,kBAAL,EA/EZ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,QAoFE;AAEA;;AAtFF;AAAA;AAAA,+BAuFiB;AACb,cAAO,KAAK,KAAZ;AACA,aAAK,CAAL;AACE,cAAG,KAAK,QAAL,KAAkB,IAAlB,IAA0B,KAAK,QAAL,KAAkB,EAA/C,EAAkD;AAChD,mBAAO,IAAP;AACD,WAFD,MAEO;AACL,mBAAO,KAAP;AACD;;AACH,aAAK,CAAL;AACE,cAAG,KAAK,UAAL,KAAoB,IAAvB,EAA4B;AAC1B,mBAAO,IAAP;AACD,WAFD,MAEO;AACL,mBAAO,KAAP;AACD;;AACH,aAAK,CAAL;AACE,cAAG,KAAK,UAAL,KAAoB,IAAvB,EAA4B;AAC1B,mBAAO,IAAP;AACD,WAFD,MAEO;AACL,mBAAO,KAAP;AACD;;AACH,aAAK,CAAL;AACE,cAAI,KAAK,QAAL,KAAkB,IAAlB,IAA0B,KAAK,QAAL,KAAkB,EAA7C,IAAqD,KAAK,QAAL,KAAkB,IAAlB,IAA0B,KAAK,QAAL,KAAkB,EAApG,EAAwG;AACtG,mBAAO,IAAP;AACD,WAFD,MAEO;AACL,mBAAO,KAAP;AACD;;AACH,aAAK,CAAL;AACE,cAAG,KAAK,MAAL,KAAiB,IAAjB,IAAyB,KAAK,UAAL,KAAoB,IAAhD,EAAqD;AACnD,mBAAO,IAAP;AACD,WAFD,MAEO;AACL,mBAAO,KAAP;AACD;;AACH;AACE,iBAAO,KAAP;AAhCF;AAkCD;AA1HH;AAAA;AAAA,2BA4HgB,IA5HhB,EA4H4B;AACxB,UAAI,CAAC,IAAL,EAAW,OAAO,IAAP;;AADa,wBAEG,IAAI,CAAC,KAAL,CAAW,GAAX,CAFH;AAAA;AAAA,UAEjB,IAFiB;AAAA,UAEX,KAFW;AAAA,UAEJ,GAFI;;AAGxB,uBAAU,IAAV,cAAkB,KAAlB,cAA2B,QAAQ,CAAC,GAAD,CAAR,GAAc,CAAzC;AACD;AAhIH;AAAA;AAAA,uCAkIyB;AACrB,WAAK,WAAL,GAAmB,KAAnB;AACD;AApIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuII,qBAAK,WAAL,GAAmB,IAAnB;AACA,qBAAK,KAAL,CAAW,YAAX;;AAxIJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA4IO,KAAK,UAAL,KAAoB,IA5I3B;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA6IY,KAAK,YAAL,CAAkB;AAAC,kBAAA,IAAI,EAAE;AAAP,iBAAlB,CA7IZ;;AAAA;AAAA,+BA+IW,KAAK,KA/IhB;AAAA,kDAgJS,CAhJT,wBAmJS,CAnJT,wBAsJS,CAtJT,yBAyJS,CAzJT,yBA4JS,CA5JT;AAAA;;AAAA;AAAA;AAAA,uBAiJY,KAAK,oBAAL,CAA0B,KAAK,QAA/B,CAjJZ;;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAoJY,KAAK,6BAAL,EApJZ;;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAuJY,KAAK,iBAAL,EAvJZ;;AAAA;AAAA;;AAAA;AAAA;AAAA,uBA0JY,KAAK,sBAAL,EA1JZ;;AAAA;AAAA;;AAAA;AAAA;AAAA,uBA6JY,KAAK,kBAAL,EA7JZ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,QAiKE;AAEA;;AAnKF;AAAA;AAAA;AAAA,4GAoKoC,QApKpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAqKU,KAAK,qBAAL,CAA2B;AAC/B,kBAAA,QAAQ,EAAE,CADqB;AAE/B,kBAAA,QAAQ,EAAE,QAFqB;AAG/B,kBAAA,YAAY,EAAE;AAHiB,iBAA3B,CArKV;;AAAA;AA0KI,qBAAK,UAAL;;AA1KJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AA8KI;AACI,gBAAA,QA/KR,GA+KmB,EA/KnB;AAgLQ,gBAAA,SAhLR,GAgLoB,EAhLpB;;AAAA,sBAiLO,KAAK,WAAL,KAAqB,KAAK,OAjLjC;AAAA;AAAA;AAAA;;AAkLM,gBAAA,QAAQ,GAAG,KAAK,WAAhB;AACA,gBAAA,SAAS,GAAG,KAAK,WAAjB;AAnLN;AAAA;;AAAA;AAAA,sBAoLc,KAAK,WAAL,GAAmB,KAAK,OApLtC;AAAA;AAAA;AAAA;;AAqLM,qBAAK,KAAL,CAAW,MAAX,EAAmB,0CAAnB,EAA8D,SAA9D;AArLN;;AAAA;AAuLW,oBAAG,KAAK,WAAL,GAAmB,KAAK,OAA3B,EAAoC;AACzC,kBAAA,QAAQ,GAAG,KAAK,WAAhB;AACA,kBAAA,SAAS,GAAG,KAAK,OAAjB;AACD;;AA1LL;AAAA,+BA2LW,KAAK,QA3LhB;AAAA,kDA4LS,GA5LT,yBA+OS,GA/OT;AAAA;;AAAA;AAAA,+BA+La,KAAK,SA/LlB;AAAA,kDAgMW,GAhMX,yBAgNW,GAhNX,yBA+NW,GA/NX;AAAA;;AAAA;AAAA,sBAiMW,KAAK,KAAL,IAAc,CAjMzB;AAAA;AAAA;AAAA;;AAAA,sBAkMc,KAAK,gBAAL,OAA4B,IAlM1C;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAmMkB,KAAK,6BAAL,CAAmC;AAAE,kBAAA,QAAQ,EAAE,KAAK,UAAjB;AAA6B,kBAAA,WAAW,EAAE,QAA1C;AAAoD,kBAAA,OAAO,EAAE,SAA7D;AAAwE,kBAAA,YAAY,EAAE,KAAK,QAA3F;AAAqG,kBAAA,QAAQ,EAAE,CAA/G;AAAkH,kBAAA,YAAY,EAAE;AAAhI,iBAAnC,CAnMlB;;AAAA;AAAA;AAAA;;AAAA;AAqMkB,gBAAA,MArMlB,GAqM2B,KAAK,cAAL,EArM3B;AAsMY,gBAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACM,gBAAA,YAvMlB,GAuMsC,IAvMtC;;AAAA,sBAwMgB,MAAM,KAAK,GAAX,IAAkB,MAAM,KAAK,GAA7B,IAAoC,MAAM,KAAK,GAxM/D;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAyMoB,KAAK,6BAAL,CAAmC;AAAE,kBAAA,QAAQ,EAAE,KAAK,UAAjB;AAA6B,kBAAA,WAAW,EAAE,QAA1C;AAAoD,kBAAA,OAAO,EAAE,SAA7D;AAAwE,kBAAA,QAAQ,EAAE,KAAK,uBAAL,CAA6B,MAA7B,CAAlF;AAAwH,kBAAA,YAAY,EAAE;AAAtI,iBAAnC,CAzMpB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBA6MgB,KAAK,6BAAL,CAAmC;AAAE,kBAAA,QAAQ,EAAE,KAAK,UAAjB;AAA6B,kBAAA,WAAW,EAAE,QAA1C;AAAoD,kBAAA,OAAO,EAAE,SAA7D;AAAwE,kBAAA,QAAQ,EAAE,EAAlF;AAAsF,kBAAA,YAAY,EAAE;AAApG,iBAAnC,CA7MhB;;AAAA;AAAA;;AAAA;AAAA,sBAiNW,KAAK,KAAL,IAAc,CAjNzB;AAAA;AAAA;AAAA;;AAAA,sBAkNc,KAAK,gBAAL,OAA4B,IAlN1C;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAmNkB,KAAK,6BAAL,CAAmC;AAAE,kBAAA,QAAQ,EAAE,KAAK,UAAjB;AAA6B,kBAAA,WAAW,EAAE,QAA1C;AAAoD,kBAAA,OAAO,EAAE,SAA7D;AAAwE,kBAAA,YAAY,EAAE,KAAK,QAA3F;AAAqG,kBAAA,QAAQ,EAAE,EAA/G;AAAmH,kBAAA,YAAY,EAAE;AAAjI,iBAAnC,CAnNlB;;AAAA;AAAA;AAAA;;AAAA;AAqNkB,gBAAA,OArNlB,GAqN2B,KAAK,cAAL,EArN3B;AAsNkB,gBAAA,aAtNlB,GAsNsC,IAtNtC;;AAAA,sBAuNgB,OAAM,KAAK,GAAX,IAAkB,OAAM,KAAK,GAA7B,IAAoC,OAAM,KAAK,GAvN/D;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAwNoB,KAAK,6BAAL,CAAmC;AAAE,kBAAA,QAAQ,EAAE,KAAK,UAAjB;AAA6B,kBAAA,WAAW,EAAE,QAA1C;AAAoD,kBAAA,OAAO,EAAE,SAA7D;AAAwE,kBAAA,QAAQ,EAAE,KAAK,sBAAL,CAA4B,OAA5B,CAAlF;AAAuH,kBAAA,YAAY,EAAE;AAArI,iBAAnC,CAxNpB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBA4NgB,KAAK,6BAAL,CAAmC;AAAE,kBAAA,QAAQ,EAAE,KAAK,UAAjB;AAA6B,kBAAA,WAAW,EAAE,QAA1C;AAAoD,kBAAA,OAAO,EAAE,SAA7D;AAAwE,kBAAA,QAAQ,EAAE,EAAlF;AAAsF,kBAAA,YAAY,EAAE;AAApG,iBAAnC,CA5NhB;;AAAA;AAAA;;AAAA;AAAA,sBAgOY,KAAK,gBAAL,OAA4B,IAhOxC;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAiOgB,KAAK,6BAAL,CAAmC;AAAE,kBAAA,QAAQ,EAAE,KAAK,UAAjB;AAA6B,kBAAA,WAAW,EAAE,QAA1C;AAAoD,kBAAA,OAAO,EAAE,SAA7D;AAAwE,kBAAA,YAAY,EAAE,KAAK,QAA3F;AAAqG,kBAAA,QAAQ,EAAE,EAA/G;AAAmH,kBAAA,YAAY,EAAE;AAAjI,iBAAnC,CAjOhB;;AAAA;AAAA;AAAA;;AAAA;AAmOgB,gBAAA,QAnOhB,GAmOyB,KAAK,cAAL,EAnOzB;AAoOgB,gBAAA,cApOhB,GAoOoC,IApOpC;;AAAA,sBAqOc,QAAM,KAAK,GAAX,IAAkB,QAAM,KAAK,GAA7B,IAAoC,QAAM,KAAK,GArO7D;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAsOkB,KAAK,6BAAL,CAAmC;AAAE,kBAAA,QAAQ,EAAE,KAAK,UAAjB;AAA6B,kBAAA,WAAW,EAAE,QAA1C;AAAoD,kBAAA,OAAO,EAAE,SAA7D;AAAwE,kBAAA,QAAQ,EAAE,KAAK,mBAAL,CAAyB,QAAzB,CAAlF;AAAoH,kBAAA,YAAY,EAAE;AAAlI,iBAAnC,CAtOlB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAwOkB,KAAK,6BAAL,CAAmC;AAAE,kBAAA,QAAQ,EAAE,KAAK,UAAjB;AAA6B,kBAAA,WAAW,EAAE,QAA1C;AAAoD,kBAAA,OAAO,EAAE,SAA7D;AAAwE,kBAAA,QAAQ,EAAE,EAAlF;AAAsF,kBAAA,YAAY,EAAE;AAApG,iBAAnC,CAxOlB;;AAAA;AAAA;;AAAA;AA6OM,qBAAK,UAAL;AA7ON;;AAAA;AAgPM;AACA,qBAAK,uBAAL;AAjPN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuPQ,gBAAA,QAvPR,GAuPmB,EAvPnB;AAwPQ,gBAAA,SAxPR,GAwPoB,EAxPpB;;AAAA,sBAyPO,KAAK,WAAL,KAAqB,KAAK,OAzPjC;AAAA;AAAA;AAAA;;AA0PM,gBAAA,QAAQ,GAAG,KAAK,WAAhB;AACA,gBAAA,SAAS,GAAG,KAAK,WAAjB;AA3PN;AAAA;;AAAA;AAAA,sBA4Pc,KAAK,WAAL,GAAmB,KAAK,OA5PtC;AAAA;AAAA;AAAA;;AA6PM,qBAAK,KAAL,CAAW,MAAX,EAAmB,0CAAnB,EAA8D,SAA9D;AA7PN;;AAAA;AA+PW,oBAAG,KAAK,WAAL,GAAmB,KAAK,OAA3B,EAAoC;AACzC,kBAAA,QAAQ,GAAG,KAAK,WAAhB;AACA,kBAAA,SAAS,GAAG,KAAK,OAAjB;AACD;;AAlQL;AAAA,+BAmQW,KAAK,SAnQhB;AAAA,kDAoQS,GApQT,yBA2QS,GA3QT,yBAmRS,GAnRT;AAAA;;AAAA;AAAA,sBAqQU,KAAK,gBAAL,OAA4B,IArQtC;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAsQc,KAAK,6BAAL,CAAmC;AAAE,kBAAA,QAAQ,EAAC,KAAK,UAAhB;AAA4B,kBAAA,WAAW,EAAE,QAAzC;AAAmD,kBAAA,OAAO,EAAE,SAA5D;AAAuE,kBAAA,YAAY,EAAE,KAAK,QAA1F;AAAoG,kBAAA,QAAQ,EAAE,CAA9G;AAAiH,kBAAA,YAAY,EAAE;AAA/H,iBAAnC,CAtQd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAwQc,KAAK,6BAAL,CAAmC;AAAE,kBAAA,QAAQ,EAAC,KAAK,UAAhB;AAA4B,kBAAA,WAAW,EAAE,QAAzC;AAAmD,kBAAA,OAAO,EAAE,SAA5D;AAAuE,kBAAA,QAAQ,EAAE,EAAjF;AAAqF,kBAAA,YAAY,EAAE;AAAnG,iBAAnC,CAxQd;;AAAA;AAAA;;AAAA;AAAA,sBA4QU,KAAK,gBAAL,OAA4B,IA5QtC;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA6Qc,KAAK,6BAAL,CAAmC;AAAE,kBAAA,QAAQ,EAAC,KAAK,UAAhB;AAA4B,kBAAA,WAAW,EAAE,QAAzC;AAAmD,kBAAA,OAAO,EAAE,SAA5D;AAAuE,kBAAA,YAAY,EAAE,KAAK,QAA1F;AAAoG,kBAAA,QAAQ,EAAE,EAA9G;AAAkH,kBAAA,YAAY,EAAE;AAAhI,iBAAnC,CA7Qd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAgRc,KAAK,6BAAL,CAAmC;AAAE,kBAAA,QAAQ,EAAC,KAAK,UAAhB;AAA4B,kBAAA,WAAW,EAAE,QAAzC;AAAmD,kBAAA,OAAO,EAAE,SAA5D;AAAuE,kBAAA,QAAQ,EAAE,EAAjF;AAAqF,kBAAA,YAAY,EAAE;AAAnG,iBAAnC,CAhRd;;AAAA;AAAA;;AAAA;AAAA,sBAoRU,KAAK,gBAAL,OAA4B,IApRtC;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAqRc,KAAK,6BAAL,CAAmC;AAAE,kBAAA,QAAQ,EAAC,KAAK,UAAhB;AAA4B,kBAAA,WAAW,EAAE,QAAzC;AAAmD,kBAAA,OAAO,EAAE,SAA5D;AAAuE,kBAAA,YAAY,EAAE,KAAK,QAA1F;AAAoG,kBAAA,QAAQ,EAAE,EAA9G;AAAkH,kBAAA,YAAY,EAAE;AAAhI,iBAAnC,CArRd;;AAAA;AAAA;AAAA;;AAAA;AAuRc,gBAAA,MAvRd,GAuRuB,KAAK,cAAL,EAvRvB;AAwRc,gBAAA,YAxRd,GAwRkC,IAxRlC;;AAAA,sBAyRY,MAAM,KAAK,GAAX,IAAkB,MAAM,KAAK,GAA7B,IAAoC,MAAM,KAAK,GAzR3D;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA2RgB,KAAK,6BAAL,CAAmC;AAAE,kBAAA,QAAQ,EAAC,KAAK,UAAhB;AAA4B,kBAAA,WAAW,EAAE,QAAzC;AAAmD,kBAAA,OAAO,EAAE,SAA5D;AAAuE,kBAAA,KAAK,EAAE,MAA9E;AAAsF,kBAAA,QAAQ,EAAE,KAAK,mBAAL,CAAyB,MAAzB,CAAhG;AAAkI,kBAAA,YAAY,EAAE;AAAhJ,iBAAnC,CA3RhB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBA6RgB,KAAK,6BAAL,CAAmC;AAAE,kBAAA,QAAQ,EAAC,KAAK,UAAhB;AAA4B,kBAAA,WAAW,EAAE,QAAzC;AAAmD,kBAAA,OAAO,EAAE,SAA5D;AAAuE,kBAAA,QAAQ,EAAE,CAAjF;AAAoF,kBAAA,YAAY,EAAE;AAAlG,iBAAnC,CA7RhB;;AAAA;AAAA;;AAAA;AAmSI,qBAAK,UAAL;;AAnSJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAuSU,KAAK,YAAL,CAAkB;AAAC,kBAAA,QAAQ,EAAE,KAAK,UAAhB;AAA4B,kBAAA,YAAY,EAAE,CAA1C;AAA6C,kBAAA,QAAQ,EAAE;AAAvD,iBAAlB,CAvSV;;AAAA;AAwSI,qBAAK,UAAL;;AAxSJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA4SQ,KAAK,QAAL,KAAkB,IA5S1B;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA6SY,KAAK,yBAAL,CAA+B;AAAC,kBAAA,QAAQ,EAAE,KAAK,QAAhB;AAA0B,kBAAA,QAAQ,EAAE,KAAK,QAAzC;AAAmD,kBAAA,YAAY,EAAE,CAAjE;AAAoE,kBAAA,QAAQ,EAAE;AAA9E,iBAA/B,CA7SZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBA+SY,KAAK,yBAAL,CAA+B;AAAC,kBAAA,QAAQ,EAAE,KAAK,QAAhB;AAA0B,kBAAA,QAAQ,EAAE,KAAK,QAAzC;AAAmD,kBAAA,YAAY,EAAE,CAAjE;AAAoE,kBAAA,QAAQ,EAAE;AAA9E,iBAA/B,CA/SZ;;AAAA;AAiTI,qBAAK,UAAL;;AAjTJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAqTO,KAAK,QAAL,KAAkB,IArTzB;AAAA;AAAA;AAAA;;AAAA,+BAsTa,KAAK,MAtTlB;AAAA,kDAuTW,eAvTX,wBA0TW,aA1TX,wBA6TW,aA7TX;AAAA;;AAAA;AAAA;AAAA,uBAwTc,KAAK,2BAAL,CAAiC;AAAC,kBAAA,SAAS,EAAE,KAAK,UAAjB;AAA6B,kBAAA,WAAW,EAAE,KAAK,WAA/C;AAA4D,kBAAA,OAAO,EAAE,KAAK,OAA1E;AAAmF,kBAAA,UAAU,EAAE,KAAK,UAApG;AAAgH,kBAAA,YAAY,EAAE,CAA9H;AAAiI,kBAAA,QAAQ,EAAE;AAA3I,iBAAjC,CAxTd;;AAAA;AAAA;;AAAA;AAAA;AAAA,uBA2Tc,KAAK,2BAAL,CAAiC;AAAC,kBAAA,SAAS,EAAE,KAAK,UAAjB;AAA6B,kBAAA,WAAW,EAAE,KAAK,WAA/C;AAA4D,kBAAA,OAAO,EAAE,KAAK,OAA1E;AAAmF,kBAAA,UAAU,EAAE,KAAK,UAApG;AAAgH,kBAAA,YAAY,EAAE,CAA9H;AAAiI,kBAAA,QAAQ,EAAE;AAA3I,iBAAjC,CA3Td;;AAAA;AAAA;;AAAA;AAAA;AAAA,uBA8Tc,KAAK,2BAAL,CAAiC;AAAC,kBAAA,SAAS,EAAE,KAAK,UAAjB;AAA6B,kBAAA,WAAW,EAAE,KAAK,WAA/C;AAA4D,kBAAA,OAAO,EAAE,KAAK,OAA1E;AAAmF,kBAAA,UAAU,EAAE,KAAK,UAApG;AAAgH,kBAAA,YAAY,EAAE,CAA9H;AAAiI,kBAAA,QAAQ,EAAE;AAA3I,iBAAjC,CA9Td;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAmUa,KAAK,MAnUlB;AAAA,kDAoUW,eApUX,yBAuUW,aAvUX,yBA0UW,aA1UX;AAAA;;AAAA;AAAA;AAAA,uBAqUc,KAAK,2BAAL,CAAiC;AAAC,kBAAA,SAAS,EAAE,KAAK,UAAjB;AAA6B,kBAAA,WAAW,EAAE,KAAK,WAA/C;AAA4D,kBAAA,OAAO,EAAE,KAAK,OAA1E;AAAmF,kBAAA,UAAU,EAAE,KAAK,UAApG;AAAgH,kBAAA,QAAQ,EAAE,KAAK,QAA/H;AAAyI,kBAAA,YAAY,EAAE,CAAvJ;AAA0J,kBAAA,QAAQ,EAAE;AAApK,iBAAjC,CArUd;;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAwUc,KAAK,2BAAL,CAAiC;AAAC,kBAAA,SAAS,EAAE,KAAK,UAAjB;AAA6B,kBAAA,WAAW,EAAE,KAAK,WAA/C;AAA4D,kBAAA,OAAO,EAAE,KAAK,OAA1E;AAAmF,kBAAA,UAAU,EAAE,KAAK,UAApG;AAAgH,kBAAA,QAAQ,EAAE,KAAK,QAA/H;AAAyI,kBAAA,YAAY,EAAE,CAAvJ;AAA0J,kBAAA,QAAQ,EAAE;AAApK,iBAAjC,CAxUd;;AAAA;AAAA;;AAAA;AAAA;AAAA,uBA2Uc,KAAK,2BAAL,CAAiC;AAAC,kBAAA,SAAS,EAAE,KAAK,UAAjB;AAA6B,kBAAA,WAAW,EAAE,KAAK,WAA/C;AAA4D,kBAAA,OAAO,EAAE,KAAK,OAA1E;AAAmF,kBAAA,UAAU,EAAE,KAAK,UAApG;AAAgH,kBAAA,QAAQ,EAAE,KAAK,QAA/H;AAAyI,kBAAA,YAAY,EAAE,CAAvJ;AAA0J,kBAAA,QAAQ,EAAE;AAApK,iBAAjC,CA3Ud;;AAAA;AAAA;;AAAA;AAiVI;AACA,qBAAK,UAAL;;AAlVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAsVU,KAAK,wBAAL,CAA8B;AAAC,kBAAA,UAAU,EAAE,KAAK,UAAlB;AAA8B,kBAAA,QAAQ,EAAE,EAAxC;AAA4C,kBAAA,YAAY,EAAE;AAA1D,iBAA9B,CAtVV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,QAwVE;AAEA;;AA1VF;AAAA;AAAA,qCA2VuB;AACnB,cAAO,KAAK,KAAZ;AACA,aAAK,GAAL;AACE,iBAAO,GAAP;;AACF,aAAK,GAAL;AACE,iBAAO,GAAP;;AACF,aAAK,GAAL;AACE,iBAAO,GAAP;;AACF,aAAK,GAAL;AACE,iBAAO,EAAP;AARF;AAUD;AAtWH;AAAA;AAAA,uCAwWyB;AACrB,UAAI,KAAK,QAAL,KAAkB,IAAtB,EAA2B;AACzB,eAAO,IAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAP;AACD;AACF;AA9WH;AAAA;AAAA,wCAgX6B,MAhX7B,EAgXmC;AAC/B,cAAO,MAAP;AACA,aAAK,GAAL;AACE,iBAAO,EAAP;;AACF,aAAK,GAAL;AACE,iBAAO,EAAP;;AACF,aAAK,GAAL;AACE,iBAAO,EAAP;AANF;AAQD;AAzXH;AAAA;AAAA,wCA2X6B,MA3X7B,EA2XmC;AAC/B,cAAO,MAAP;AACA,aAAK,GAAL;AACE,iBAAO,EAAP;;AACF,aAAK,GAAL;AACE,iBAAO,EAAP;;AACF,aAAK,GAAL;AACE,iBAAO,EAAP;AANF;AAQD;AApYH;AAAA;AAAA,4CAsYiC,MAtYjC,EAsYuC;AACnC,cAAO,MAAP;AACA,aAAK,GAAL;AACE,iBAAO,EAAP;;AACF,aAAK,GAAL;AACE,iBAAO,EAAP;;AACF,aAAK,GAAL;AACE,iBAAO,EAAP;AANF;AAQD;AA/YH;AAAA;AAAA,2CAiZgC,MAjZhC,EAiZsC;AAClC,cAAO,MAAP;AACA,aAAK,GAAL;AACE,iBAAO,EAAP;;AACF,aAAK,GAAL;AACE,iBAAO,EAAP;;AACF,aAAK,GAAL;AACE,iBAAO,CAAP;AANF;AAQD;AA1ZH;;AAAA;AAAA,EAA4C,GAA5C,CAAA;;AACU,UAAA,CAAA,CAAP,IAAI,EAAG,CAAA,E,wBAAA,E,SAAA,E,KAAa,CAAb,CAAA;;AACA,UAAA,CAAA,CAAP,IAAI,EAAG,CAAA,E,wBAAA,E,OAAA,E,KAAY,CAAZ,CAAA;;AAEA,UAAA,CAAA,CAAP,MAAO,CAAA,E,wBAAA,E,uBAAA,E,KAAqB,CAArB,CAAA;;AACA,UAAA,CAAA,CAAP,MAAO,CAAA,E,wBAAA,E,qBAAA,E,KAAmB,CAAnB,CAAA;;AACA,UAAA,CAAA,CAAP,MAAO,CAAA,E,wBAAA,E,+BAAA,E,KAA6B,CAA7B,CAAA;;AACA,UAAA,CAAA,CAAP,MAAO,CAAA,E,wBAAA,E,cAAA,E,KAAY,CAAZ,CAAA;;AACA,UAAA,CAAA,CAAP,MAAO,CAAA,E,wBAAA,E,cAAA,E,KAAY,CAAZ,CAAA;;AACA,UAAA,CAAA,CAAP,MAAO,CAAA,E,wBAAA,E,2BAAA,E,KAAyB,CAAzB,CAAA;;AACA,UAAA,CAAA,CAAP,MAAO,CAAA,E,wBAAA,E,6BAAA,E,KAA2B,CAA3B,CAAA;;AACA,UAAA,CAAA,CAAP,MAAO,CAAA,E,wBAAA,E,0BAAA,E,KAAwB,CAAxB,CAAA;;AAEA,UAAA,CAAA,CAAP,MAAO,CAAA,E,wBAAA,E,YAAA,E,KAAU,CAAV,CAAA;;AACA,UAAA,CAAA,CAAP,MAAO,CAAA,E,wBAAA,E,cAAA,E,KAAY,CAAZ,CAAA;;AACA,UAAA,CAAA,CAAP,MAAO,CAAA,E,wBAAA,E,YAAA,E,KAAU,CAAV,CAAA;;AA2DR,UAAA,CAAA,CADC,KAAK,CAAC,OAAD,CACN,CAAA,E,wBAAA,E,yBAAA,EAQC,IARD,CAAA;;AA1EmB,cAAc,GAAA,UAAA,CAAA,CATlC,SAAS,CAAE;AACV,EAAA,UAAU,EAAE;AACV,IAAA,cAAc,EAAd,cADU;AAEV,IAAA,uBAAuB,EAAvB,uBAFU;AAGV,IAAA,UAAU,EAAV,UAHU;AAIV,IAAA,kBAAkB,EAAlB,kBAJU;AAKV,IAAA,qBAAqB,EAArB;AALU;AADF,CAAF,CASyB,CAAA,EAAd,cAAc,CAAd;eAAA,c","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch\r\n} from 'vue-property-decorator';\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n\r\nimport formacaoPallet from '../Relatorios/Parametros/formacaoPallet.vue';\r\nimport movimentoCamaraOperador from '../Relatorios/Parametros/movimentoCamaraOperador.vue';\r\nimport mapaCamara from '../Relatorios/Parametros/mapaCamaras.vue';\r\nimport localizacaoProduto from '../Relatorios/Parametros/localizacaoProdutos.vue';\r\nimport historicoCamaraPallet from '../Relatorios/Parametros/historicoCamaraPallet.vue';\r\n\r\n@Component ({\r\n  components: {\r\n    formacaoPallet,\r\n    movimentoCamaraOperador,\r\n    mapaCamara,\r\n    localizacaoProduto,\r\n    historicoCamaraPallet\r\n  }\r\n})\r\nexport default class InputModalsExp extends Vue {\r\n  @Prop() nameBox!: any\r\n  @Prop() idBox!: any;\r\n\r\n  @Action reportFormacaoPallets\r\n  @Action setSelectedIdReport\r\n  @Action reportMovimentoCamaraOperador\r\n  @Action reportCamara\r\n  @Action noShowReport\r\n  @Action ReportLocalizacaoProdutos\r\n  @Action ReportHistoricoCamaraPallet\r\n  @Action ReportPosicaoCamaraVazia\r\n\r\n  @Getter filialName\r\n  @Getter userFeatures\r\n  @Getter showReport\r\n\r\n  private dateToSend: any = null;\r\n  private turnoGroup: any = 1;\r\n  private periodoGroup: any = 1;\r\n  private nrPallet: any = null;\r\n  private clearFields: boolean = false;\r\n  private idChambers: any = null;\r\n  private InitialDate: any = null;\r\n  private EndDate: any = null;\r\n  private CodSicop: any = null;\r\n  private Operation: any = null;\r\n  private Movement: any = null;\r\n  private Shift: any = null;\r\n  private position: boolean = false;\r\n  private Status: any = null;\r\n\r\n  //#region ------------- Get Parameters \r\n  public getNrPallet(nrPallet: any): void {\r\n    this.nrPallet = nrPallet;\r\n  }\r\n\r\n  public getIdChambers(idChambers: any): void{\r\n    this.idChambers = idChambers;\r\n  }\r\n\r\n  public getCodSicop(codSicop: any): void{\r\n    this.CodSicop = codSicop;\r\n  }\r\n\r\n  public getOperation(operation: any): void{\r\n    this.Operation = operation;\r\n  }\r\n\r\n  public getMovement(movement: any): void{\r\n    this.Movement = movement;\r\n  }\r\n\r\n  public getShift(shift: any): void{\r\n    this.Shift = shift;\r\n  }\r\n\r\n  public getInitialDate(initialDate: any): void{\r\n    this.InitialDate = initialDate;\r\n  }\r\n\r\n  public getEndDate(endDate: any): void{\r\n    this.EndDate = endDate;\r\n  }\r\n\r\n  public GetEmptyPositions(position: any): void{\r\n    this.position = position;\r\n  }\r\n\r\n  public GetStatus(status: any): void {\r\n    this.Status = status;\r\n  }\r\n\r\n  @Watch('idBox')\r\n  public async onPropertyChangedsIdBox(value: any, oldValue: any): Promise < void > {\r\n    console.log(value);\r\n    switch(value){\r\n    case 6:\r\n      this.closeModal();\r\n      await this.ReportPosicaoVazia();\r\n      break;\r\n    }\r\n  }\r\n\r\n  //#endregion --------------------------------------------------\r\n\r\n  //#region ------------- Prints, Reset Fields ....\r\n  public canPrint(): boolean {\r\n    switch(this.idBox){\r\n    case 1:\r\n      if(this.nrPallet !== null && this.nrPallet !== ''){\r\n        return true;\r\n      } else { \r\n        return false;\r\n      }\r\n    case 2:\r\n      if(this.idChambers !== null){\r\n        return true;\r\n      } else { \r\n        return false;\r\n      }\r\n    case 3:\r\n      if(this.idChambers !== null){\r\n        return true;\r\n      } else { \r\n        return false;\r\n      }\r\n    case 4:\r\n      if((this.nrPallet !== null && this.nrPallet !== '') || (this.CodSicop !== null && this.CodSicop !== '')){\r\n        return true;\r\n      } else { \r\n        return false;\r\n      }\r\n    case 5:\r\n      if(this.Status !==  null && this.idChambers !== null){\r\n        return true;\r\n      } else { \r\n        return false;\r\n      }\r\n    default: \r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addDay(date: string): any {\r\n    if (!date) return null;\r\n    const [year, month, day] = date.split('-');\r\n    return `${year}-${month}-${parseInt(day)+1}`;\r\n  }\r\n\r\n  public resetClearFields(): void{\r\n    this.clearFields = false;\r\n  }\r\n\r\n  public async closeModal(): Promise<void> {\r\n    this.clearFields = true;\r\n    this.$emit('closeModal');\r\n  }\r\n\r\n  public async Print(): Promise < void > {\r\n    if(this.showReport === true){\r\n      await this.noShowReport({show: false});\r\n    }\r\n    switch(this.idBox){\r\n    case 1:\r\n      await this.ReportFormacaoPallet(this.nrPallet);\r\n      break;\r\n    case 2:\r\n      await this.ReportMovimentoCamaraOperador();\r\n      break;\r\n    case 3:\r\n      await this.ReportMapaCamaras();\r\n      break; \r\n    case 4:\r\n      await this.ReportLocalizaProdutos();\r\n      break;\r\n    case 5: \r\n      await this.ReportCamaraPallet();\r\n      break;  \r\n    }\r\n  }\r\n  //#endregion ---------------------------------\r\n\r\n  //#region ------------- Report Methods\r\n  public async ReportFormacaoPallet(nrPallet: any): Promise<void> {\r\n    await this.reportFormacaoPallets({ \r\n      idReport: 1,\r\n      nrPallet: nrPallet,\r\n      reportModule: 2\r\n    });\r\n    this.closeModal();\r\n  } \r\n\r\n  public async ReportMovimentoCamaraOperador(): Promise<void> {\r\n    // Fazer as Validações aqui para cada item enviado \r\n    let initDate = '';\r\n    let finalDate = '';\r\n    if(this.InitialDate === this.EndDate) {\r\n      initDate = this.InitialDate;\r\n      finalDate = this.InitialDate;\r\n    } else if(this.InitialDate > this.EndDate) {\r\n      this.$swal('Ops!', 'A data Final é menor que a data Inicial.','warning');\r\n      return;\r\n    } else if(this.InitialDate < this.EndDate) {\r\n      initDate = this.InitialDate;\r\n      finalDate = this.EndDate;\r\n    }\r\n    switch(this.Movement){\r\n    case '1':\r\n      // Movimentação por Câmaras\r\n      // Tipo de Operação\r\n      switch(this.Operation){\r\n      case '1':\r\n        if(this.Shift <= 3){\r\n          if (this.haveRegistration() === true){\r\n            await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 2, reportModule: 2 });\r\n          } else {\r\n            const shifts = this.getShiftToSend();\r\n            console.log(shifts);\r\n            const sendIdReport: any = null;\r\n            if (shifts === '1' || shifts === '2' || shifts === '0'){ \r\n              await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: this.getIdReportChambersArmz(shifts), reportModule: 2 }); \r\n            }\r\n          }\r\n        } else { \r\n          await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 26, reportModule: 2 });\r\n        }\r\n        break;\r\n      case '2':\r\n        if(this.Shift <= 3){\r\n          if (this.haveRegistration() === true){\r\n            await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 21, reportModule: 2 });\r\n          } else {\r\n            const shifts = this.getShiftToSend();\r\n            const sendIdReport: any = null;\r\n            if (shifts === '1' || shifts === '2' || shifts === '0'){  \r\n              await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: this.getIdReportChambersExp(shifts), reportModule: 2 });\r\n            }\r\n          }\r\n        } else { \r\n          await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 27, reportModule: 2 });\r\n        }\r\n        break;\r\n      case '3':\r\n        if (this.haveRegistration() === true){\r\n          await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 23, reportModule: 2 });\r\n        } else {\r\n          const shifts = this.getShiftToSend();\r\n          const sendIdReport: any = null;\r\n          if (shifts === '1' || shifts === '2' || shifts === '0'){ \r\n            await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: this.getIdReportChambers(shifts), reportModule: 2 });\r\n          } else {\r\n            await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 22, reportModule: 2 });\r\n          }   \r\n        }\r\n        break;\r\n      }\r\n      this.closeModal();\r\n      break;\r\n    case '2':\r\n      // Movimentação por Operador\r\n      this.ReportMovimentoOperador();\r\n      break;\r\n    } \r\n  }\r\n\r\n  public async ReportMovimentoOperador(): Promise<void> {\r\n    let initDate = '';\r\n    let finalDate = '';\r\n    if(this.InitialDate === this.EndDate) {\r\n      initDate = this.InitialDate;\r\n      finalDate = this.InitialDate;\r\n    } else if(this.InitialDate > this.EndDate) {\r\n      this.$swal('Ops!', 'A data Final é menor que a data Inicial.','warning');\r\n      return;\r\n    } else if(this.InitialDate < this.EndDate) {\r\n      initDate = this.InitialDate;\r\n      finalDate = this.EndDate;\r\n    }\r\n    switch(this.Operation){\r\n    case '1':\r\n      if (this.haveRegistration() === true){\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 2, reportModule: 2 });\r\n      } else {\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 28, reportModule: 2 }); \r\n      }\r\n      break;\r\n    case '2':\r\n      if (this.haveRegistration() === true){\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 21, reportModule: 2 });\r\n        \r\n      } else {\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 29, reportModule: 2 }); \r\n      }\r\n      break;\r\n    case '3':\r\n      if (this.haveRegistration() === true){\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 23, reportModule: 2 });\r\n      } else {\r\n        const shifts = this.getShiftToSend();\r\n        const sendIdReport: any = null;\r\n        if (shifts === '1' || shifts === '2' || shifts === '0'){ \r\n          // Mandar com turno\r\n          await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, shift: shifts, idReport: this.getIdReportOperador(shifts), reportModule: 2 }); \r\n        } else { \r\n          await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 3, reportModule: 2 }); \r\n        }\r\n         \r\n      }\r\n      break;\r\n    }\r\n    this.closeModal();\r\n  }\r\n\r\n  public async ReportMapaCamaras(): Promise<void>{\r\n    await this.reportCamara({chambers: this.idChambers, reportModule: 2, idReport: 41});\r\n    this.closeModal();\r\n  }\r\n\r\n  public async ReportLocalizaProdutos(): Promise<void>{\r\n    if (this.nrPallet === null){\r\n      await this.ReportLocalizacaoProdutos({codSicop: this.CodSicop, nrPallet: this.nrPallet, reportModule: 2, idReport: 42});\r\n    } else { \r\n      await this.ReportLocalizacaoProdutos({codSicop: this.CodSicop, nrPallet: this.nrPallet, reportModule: 2, idReport: 43});\r\n    }\r\n    this.closeModal();\r\n  }\r\n\r\n  public async ReportCamaraPallet(): Promise<void> {\r\n    if(this.CodSicop === null){\r\n      switch(this.Status){\r\n      case 'Armazenado(s)':\r\n        await this.ReportHistoricoCamaraPallet({idChamber: this.idChambers, initialDate: this.InitialDate, endDate: this.EndDate, filialName: this.filialName, reportModule: 2, idReport: 45});\r\n        break;\r\n      case 'Expedido(s)':\r\n        await this.ReportHistoricoCamaraPallet({idChamber: this.idChambers, initialDate: this.InitialDate, endDate: this.EndDate, filialName: this.filialName, reportModule: 2, idReport: 46});\r\n        break;\r\n      case 'Excluído(s)':\r\n        await this.ReportHistoricoCamaraPallet({idChamber: this.idChambers, initialDate: this.InitialDate, endDate: this.EndDate, filialName: this.filialName, reportModule: 2, idReport: 47});\r\n        break;\r\n      }\r\n    } else {\r\n      // o relatório com produto;\r\n      switch(this.Status){\r\n      case 'Armazenado(s)':\r\n        await this.ReportHistoricoCamaraPallet({idChamber: this.idChambers, initialDate: this.InitialDate, endDate: this.EndDate, filialName: this.filialName, codSicop: this.CodSicop, reportModule: 2, idReport: 48});\r\n        break;\r\n      case 'Expedido(s)':\r\n        await this.ReportHistoricoCamaraPallet({idChamber: this.idChambers, initialDate: this.InitialDate, endDate: this.EndDate, filialName: this.filialName, codSicop: this.CodSicop, reportModule: 2, idReport: 49});\r\n        break;\r\n      case 'Excluído(s)':\r\n        await this.ReportHistoricoCamaraPallet({idChamber: this.idChambers, initialDate: this.InitialDate, endDate: this.EndDate, filialName: this.filialName, codSicop: this.CodSicop, reportModule: 2, idReport: 50});\r\n        break;\r\n      }\r\n    }\r\n    \r\n \r\n    // await this.ReportHistoricoCamaraPallet({codSicop: this.CodSicop, nrPallet: this.nrPallet, reportModule: 2, idReport: 45});\r\n    this.closeModal();    \r\n  }\r\n\r\n  public async ReportPosicaoVazia(): Promise<void> {\r\n    await this.ReportPosicaoCamaraVazia({filialName: this.filialName, idReport: 51, reportModule: 2 });\r\n  }\r\n  //#endregion --------------------------------------------------\r\n\r\n  //#region ------------- Print Informations\r\n  public getShiftToSend(): any{\r\n    switch(this.Shift){\r\n    case '1': \r\n      return '1';\r\n    case '2': \r\n      return '2';\r\n    case '3': \r\n      return '0';\r\n    case '4': \r\n      return '';\r\n    }\r\n  }\r\n\r\n  public haveRegistration(): boolean{\r\n    if (this.CodSicop !== null){\r\n      return true;\r\n    } else { \r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getIdReportOperador(shifts): any{\r\n    switch(shifts){\r\n    case '1': \r\n      return 31;\r\n    case '2':\r\n      return 32;\r\n    case '0': \r\n      return 33;\r\n    }\r\n  }\r\n\r\n  public getIdReportChambers(shifts): any{\r\n    switch(shifts){\r\n    case '1': \r\n      return 34;\r\n    case '2':\r\n      return 35;\r\n    case '0': \r\n      return 36;\r\n    }\r\n  }\r\n\r\n  public getIdReportChambersArmz(shifts): any{\r\n    switch(shifts){\r\n    case '1': \r\n      return 24;\r\n    case '2':\r\n      return 37;\r\n    case '0': \r\n      return 38;\r\n    }\r\n  }\r\n\r\n  public getIdReportChambersExp(shifts): any{\r\n    switch(shifts){\r\n    case '1': \r\n      return 25;\r\n    case '2':\r\n      return 39;\r\n    case '0': \r\n      return 4;\r\n    }\r\n  }\r\n\r\n  //#endregion --------------------------------\r\n}\r\n"],"sourceRoot":""}]}