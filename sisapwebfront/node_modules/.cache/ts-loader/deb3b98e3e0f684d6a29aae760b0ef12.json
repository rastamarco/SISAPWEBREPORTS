{"remainingRequest":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\inputModalExp.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\inputModalExp.vue","mtime":1610369485864},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\inputModalExp.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch\r\n} from 'vue-property-decorator';\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n\r\nimport formacaoPallet from '../Relatorios/Parametros/formacaoPallet.vue';\r\nimport movimentoCamaraOperador from '../Relatorios/Parametros/movimentoCamaraOperador.vue';\r\nimport camaras from '../Relatorios/Parametros/camaras.vue';\r\nimport localizacaoProduto from '../Relatorios/Parametros/localizacaoProdutos.vue';\r\nimport historicoCamaraPallet from '../Relatorios/Parametros/historicoCamaraPallet.vue';\r\n\r\n@Component ({\r\n  components: {\r\n    formacaoPallet,\r\n    movimentoCamaraOperador,\r\n    camaras,\r\n    localizacaoProduto,\r\n    historicoCamaraPallet\r\n  }\r\n})\r\nexport default class InputModalsExp extends Vue {\r\n  @Prop() nameBox!: any;\r\n  @Prop() idBox!: any;\r\n\r\n  @Action reportFormacaoPallets\r\n  @Action setSelectedIdReport\r\n  @Action reportMovimentoCamaraOperador\r\n  @Action reportCamara\r\n  @Action noShowReport\r\n  @Action ReportLocalizacaoProdutos\r\n  @Action ReportHistoricoCamaraPallet\r\n  @Action ReportPosicaoCamaraVazia\r\n  @Action SetIdBox\r\n  @Action ReportPesoProdutoCamara\r\n\r\n  @Getter filialName\r\n  @Getter userFeatures\r\n  @Getter showReport\r\n  @Getter box;\r\n\r\n  private dateToSend: any = null;\r\n  private turnoGroup: any = 1;\r\n  private periodoGroup: any = 1;\r\n  private nrPallet: any = null;\r\n  private clearFields: boolean = false;\r\n  private idChambers: any = null;\r\n  private InitialDate: any = null;\r\n  private EndDate: any = null;\r\n  private CodSicop: any = null;\r\n  private Operation: any = null;\r\n  private Movement: any = null;\r\n  private Shift: any = null;\r\n  private position: boolean = false;\r\n  private Status: any = null;\r\n\r\n  //#region ------------- Get Parameters \r\n  public getNrPallet(nrPallet: any): void {\r\n    this.nrPallet = nrPallet;\r\n  }\r\n\r\n  public getIdChambers(idChambers: any): void{\r\n    this.idChambers = idChambers;\r\n  }\r\n\r\n  public getCodSicop(codSicop: any): void{\r\n    this.CodSicop = codSicop;\r\n  }\r\n\r\n  public getOperation(operation: any): void{\r\n    this.Operation = operation;\r\n  }\r\n\r\n  public getMovement(movement: any): void{\r\n    this.Movement = movement;\r\n  }\r\n\r\n  public getShift(shift: any): void{\r\n    this.Shift = shift;\r\n  }\r\n\r\n  public getInitialDate(initialDate: any): void{\r\n    this.InitialDate = initialDate;\r\n  }\r\n\r\n  public getEndDate(endDate: any): void{\r\n    this.EndDate = endDate;\r\n  }\r\n\r\n  public GetEmptyPositions(position: any): void{\r\n    this.position = position;\r\n  }\r\n\r\n  public GetStatus(status: any): void {\r\n    this.Status = status;\r\n  }\r\n\r\n  @Watch('box')\r\n  public async onPropertyChangeds(value: any, oldValue: any): Promise < void > {\r\n    switch(value){\r\n    case 6: \r\n      this.closeModal();\r\n      await this.ReportPosicaoVazia();\r\n      await this.SetIdBox({id: null});\r\n      break;\r\n    } \r\n  }\r\n\r\n  //#endregion --------------------------------------------------\r\n\r\n  //#region ------------- Prints, Reset Fields ....\r\n  public canPrint(): boolean {\r\n    switch(this.idBox){\r\n    case 1:\r\n      if(this.nrPallet !== null && this.nrPallet !== ''){\r\n        return true;\r\n      } else { \r\n        return false;\r\n      }\r\n    case 2:\r\n      if(this.idChambers !== null){\r\n        return true;\r\n      } else { \r\n        return false;\r\n      }\r\n    case 3:\r\n      if(this.idChambers !== null){\r\n        return true;\r\n      } else { \r\n        return false;\r\n      }\r\n    case 4:\r\n      if((this.nrPallet !== null && this.nrPallet !== '') || (this.CodSicop !== null && this.CodSicop !== '')){\r\n        return true;\r\n      } else { \r\n        return false;\r\n      }\r\n    case 5:\r\n      if(this.Status !==  null && this.idChambers !== null){\r\n        return true;\r\n      } else { \r\n        return false;\r\n      }\r\n    case 7:\r\n      if(this.idChambers !== null){\r\n        return true;\r\n      } else { \r\n        return false;\r\n      }\r\n    default: \r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addDay(date: string): any {\r\n    if (!date) return null;\r\n    const [year, month, day] = date.split('-');\r\n    return `${year}-${month}-${parseInt(day)+1}`;\r\n  }\r\n\r\n  public resetClearFields(): void{\r\n    this.clearFields = false;\r\n  }\r\n\r\n  public async closeModal(): Promise<void> {\r\n    this.clearFields = true;\r\n    this.$emit('closeModal');\r\n  }\r\n\r\n  public async Print(): Promise < void > {\r\n    if(this.showReport === true){\r\n      await this.noShowReport({show: false});\r\n    }\r\n    switch(this.idBox){\r\n    case 1:\r\n      await this.ReportFormacaoPallet(this.nrPallet);\r\n      break;\r\n    case 2:\r\n      await this.ReportMovimentoCamaraOperador();\r\n      break;\r\n    case 3:\r\n      await this.ReportMapaCamaras();\r\n      break; \r\n    case 4:\r\n      await this.ReportLocalizaProdutos();\r\n      break;\r\n    case 5: \r\n      await this.ReportCamaraPallet();\r\n      break;\r\n    case 7: \r\n      await this.ReportPesosProdutoNasCamaras();\r\n      break;   \r\n    }\r\n  }\r\n  //#endregion ---------------------------------\r\n\r\n  //#region ------------- Report Methods\r\n  public async ReportFormacaoPallet(nrPallet: any): Promise<void> {\r\n    await this.reportFormacaoPallets({ \r\n      idReport: 1,\r\n      nrPallet: nrPallet,\r\n      reportModule: 2\r\n    });\r\n    this.closeModal();\r\n  } \r\n\r\n  public async ReportMovimentoCamaraOperador(): Promise<void> {\r\n    // Fazer as Validações aqui para cada item enviado \r\n    let initDate = '';\r\n    let finalDate = '';\r\n    if(this.InitialDate === this.EndDate) {\r\n      initDate = this.InitialDate;\r\n      finalDate = this.InitialDate;\r\n    } else if(this.InitialDate > this.EndDate) {\r\n      this.$swal('Ops!', 'A data Final é menor que a data Inicial.','warning');\r\n      return;\r\n    } else if(this.InitialDate < this.EndDate) {\r\n      initDate = this.InitialDate;\r\n      finalDate = this.EndDate;\r\n    }\r\n    switch(this.Movement){\r\n    case '1':\r\n      // Movimentação por Câmaras\r\n      // Tipo de Operação\r\n      switch(this.Operation){\r\n      case '1':\r\n        if(this.Shift <= 3){\r\n          if (this.haveRegistration() === true){\r\n            await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 2, reportModule: 2 });\r\n          } else {\r\n            const shifts = this.getShiftToSend();\r\n            console.log(shifts);\r\n            const sendIdReport: any = null;\r\n            if (shifts === '1' || shifts === '2' || shifts === '0'){ \r\n              await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: this.getIdReportChambersArmz(shifts), reportModule: 2 }); \r\n            }\r\n          }\r\n        } else { \r\n          await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 26, reportModule: 2 });\r\n        }\r\n        break;\r\n      case '2':\r\n        if(this.Shift <= 3){\r\n          if (this.haveRegistration() === true){\r\n            await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 21, reportModule: 2 });\r\n          } else {\r\n            const shifts = this.getShiftToSend();\r\n            const sendIdReport: any = null;\r\n            if (shifts === '1' || shifts === '2' || shifts === '0'){  \r\n              await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: this.getIdReportChambersExp(shifts), reportModule: 2 });\r\n            }\r\n          }\r\n        } else { \r\n          await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 27, reportModule: 2 });\r\n        }\r\n        break;\r\n      case '3':\r\n        if (this.haveRegistration() === true){\r\n          await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 23, reportModule: 2 });\r\n        } else {\r\n          const shifts = this.getShiftToSend();\r\n          const sendIdReport: any = null;\r\n          if (shifts === '1' || shifts === '2' || shifts === '0'){ \r\n            await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: this.getIdReportChambers(shifts), reportModule: 2 });\r\n          } else {\r\n            await this.reportMovimentoCamaraOperador({ chambers: this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 22, reportModule: 2 });\r\n          }   \r\n        }\r\n        break;\r\n      }\r\n      this.closeModal();\r\n      break;\r\n    case '2':\r\n      // Movimentação por Operador\r\n      this.ReportMovimentoOperador();\r\n      break;\r\n    } \r\n  }\r\n\r\n  public async ReportMovimentoOperador(): Promise<void> {\r\n    let initDate = '';\r\n    let finalDate = '';\r\n    if(this.InitialDate === this.EndDate) {\r\n      initDate = this.InitialDate;\r\n      finalDate = this.InitialDate;\r\n    } else if(this.InitialDate > this.EndDate) {\r\n      this.$swal('Ops!', 'A data Final é menor que a data Inicial.','warning');\r\n      return;\r\n    } else if(this.InitialDate < this.EndDate) {\r\n      initDate = this.InitialDate;\r\n      finalDate = this.EndDate;\r\n    }\r\n    switch(this.Operation){\r\n    case '1':\r\n      if (this.haveRegistration() === true){\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 2, reportModule: 2 });\r\n      } else {\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 28, reportModule: 2 }); \r\n      }\r\n      break;\r\n    case '2':\r\n      if (this.haveRegistration() === true){\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 21, reportModule: 2 });\r\n        \r\n      } else {\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 29, reportModule: 2 }); \r\n      }\r\n      break;\r\n    case '3':\r\n      if (this.haveRegistration() === true){\r\n        await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, registration: this.CodSicop, idReport: 23, reportModule: 2 });\r\n      } else {\r\n        const shifts = this.getShiftToSend();\r\n        const sendIdReport: any = null;\r\n        if (shifts === '1' || shifts === '2' || shifts === '0'){ \r\n          // Mandar com turno\r\n          await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, shift: shifts, idReport: this.getIdReportOperador(shifts), reportModule: 2 }); \r\n        } else { \r\n          await this.reportMovimentoCamaraOperador({ chambers:this.idChambers, initialDate: initDate, endDate: finalDate, idReport: 3, reportModule: 2 }); \r\n        }\r\n         \r\n      }\r\n      break;\r\n    }\r\n    this.closeModal();\r\n  }\r\n\r\n  public async ReportMapaCamaras(): Promise<void>{\r\n    await this.reportCamara({chambers: this.idChambers, reportModule: 2, idReport: 41});\r\n    this.closeModal();\r\n  }\r\n\r\n  public async ReportLocalizaProdutos(): Promise<void>{\r\n    if (this.nrPallet === null){\r\n      await this.ReportLocalizacaoProdutos({codSicop: this.CodSicop, nrPallet: this.nrPallet, reportModule: 2, idReport: 42});\r\n    } else { \r\n      await this.ReportLocalizacaoProdutos({codSicop: this.CodSicop, nrPallet: this.nrPallet, reportModule: 2, idReport: 43});\r\n    }\r\n    this.closeModal();\r\n  }\r\n\r\n  public async ReportCamaraPallet(): Promise<void> {\r\n    if(this.CodSicop === null){\r\n      switch(this.Status){\r\n      case 'Armazenado(s)':\r\n        await this.ReportHistoricoCamaraPallet({idChamber: this.idChambers, initialDate: this.InitialDate, endDate: this.EndDate, filialName: this.filialName, reportModule: 2, idReport: 45});\r\n        break;\r\n      case 'Expedido(s)':\r\n        await this.ReportHistoricoCamaraPallet({idChamber: this.idChambers, initialDate: this.InitialDate, endDate: this.EndDate, filialName: this.filialName, reportModule: 2, idReport: 46});\r\n        break;\r\n      case 'Excluído(s)':\r\n        await this.ReportHistoricoCamaraPallet({idChamber: this.idChambers, initialDate: this.InitialDate, endDate: this.EndDate, filialName: this.filialName, reportModule: 2, idReport: 47});\r\n        break;\r\n      }\r\n    } else {\r\n      // o relatório com produto;\r\n      switch(this.Status){\r\n      case 'Armazenado(s)':\r\n        await this.ReportHistoricoCamaraPallet({idChamber: this.idChambers, initialDate: this.InitialDate, endDate: this.EndDate, filialName: this.filialName, codSicop: this.CodSicop, reportModule: 2, idReport: 48});\r\n        break;\r\n      case 'Expedido(s)':\r\n        await this.ReportHistoricoCamaraPallet({idChamber: this.idChambers, initialDate: this.InitialDate, endDate: this.EndDate, filialName: this.filialName, codSicop: this.CodSicop, reportModule: 2, idReport: 49});\r\n        break;\r\n      case 'Excluído(s)':\r\n        await this.ReportHistoricoCamaraPallet({idChamber: this.idChambers, initialDate: this.InitialDate, endDate: this.EndDate, filialName: this.filialName, codSicop: this.CodSicop, reportModule: 2, idReport: 50});\r\n        break;\r\n      }\r\n    }\r\n    // await this.ReportHistoricoCamaraPallet({codSicop: this.CodSicop, nrPallet: this.nrPallet, reportModule: 2, idReport: 45});\r\n    this.closeModal();    \r\n  }\r\n\r\n  public async ReportPosicaoVazia(): Promise<void> {\r\n    this.closeModal();\r\n    await this.ReportPosicaoCamaraVazia({filialName: this.filialName, idReport: 51, reportModule: 2 });\r\n  }\r\n\r\n  public async ReportPesosProdutoNasCamaras(): Promise<void> {\r\n    await this.ReportPesoProdutoCamara({idChamber: this.idChambers, idReport: 52, reportModule: 2});\r\n    this.closeModal();\r\n  }\r\n  //#endregion --------------------------------------------------\r\n\r\n  //#region ------------- Print Informations\r\n  public getShiftToSend(): any{\r\n    switch(this.Shift){\r\n    case '1': \r\n      return '1';\r\n    case '2': \r\n      return '2';\r\n    case '3': \r\n      return '0';\r\n    case '4': \r\n      return '';\r\n    }\r\n  }\r\n\r\n  public haveRegistration(): boolean{\r\n    if (this.CodSicop !== null){\r\n      return true;\r\n    } else { \r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getIdReportOperador(shifts): any{\r\n    switch(shifts){\r\n    case '1': \r\n      return 31;\r\n    case '2':\r\n      return 32;\r\n    case '0': \r\n      return 33;\r\n    }\r\n  }\r\n\r\n  public getIdReportChambers(shifts): any{\r\n    switch(shifts){\r\n    case '1': \r\n      return 34;\r\n    case '2':\r\n      return 35;\r\n    case '0': \r\n      return 36;\r\n    }\r\n  }\r\n\r\n  public getIdReportChambersArmz(shifts): any{\r\n    switch(shifts){\r\n    case '1': \r\n      return 24;\r\n    case '2':\r\n      return 37;\r\n    case '0': \r\n      return 38;\r\n    }\r\n  }\r\n\r\n  public getIdReportChambersExp(shifts): any{\r\n    switch(shifts){\r\n    case '1': \r\n      return 25;\r\n    case '2':\r\n      return 39;\r\n    case '0': \r\n      return 4;\r\n    }\r\n  }\r\n\r\n  //#endregion --------------------------------\r\n  async mounted(){\r\n    // Forçando aparecer a leitura do idBox no inicio para  abrir o relatório direto caso for o id 6 que não precisa de parametros\r\n    switch(this.box){\r\n    case 6: \r\n      this.closeModal();\r\n      await this.ReportPosicaoVazia();\r\n      break;\r\n    } \r\n  }\r\n}\r\n"],"sourceRoot":""}]}