{"remainingRequest":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\store\\Expedicao.ts","dependencies":[{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\store\\Expedicao.ts","mtime":1610052084889},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\store\\Expedicao.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport ParametersExpedicao from '../models/parametersExpedicao.model';\r\nimport Product from '../models/product.model';\r\n\r\nexport const Expedicao = {\r\n  state:{\r\n    allChambers: null,\r\n    productName: null,\r\n    validPallet: null\r\n  },\r\n  getters:{\r\n    allChambers(state){\r\n      return state.allChambers;\r\n    },\r\n    productName(state){\r\n      return state.productName;\r\n    },\r\n    validPallet(state){\r\n      return state.validPallet;\r\n    }\r\n  },\r\n  mutations:{\r\n    setAllChambers(state, value) {\r\n      state.allChambers = value;\r\n    },\r\n    setProductName(state, value) {\r\n      state.productName = value;\r\n    },\r\n    setValidPallet(state, value){\r\n      state.validPallet = value;\r\n    }\r\n  },\r\n  actions:{\r\n    async reportFormacaoPallets({ commit }, options){\r\n      const parameter = new ParametersExpedicao();\r\n      parameter.nrPallet = options.nrPallet;\r\n      await commit('setIdReport', options.idReport);\r\n      await commit('setReportModule', options.reportModule);\r\n      await commit('setParams', JSON.stringify(parameter)); \r\n      await commit('setShowReport', true);\r\n    }, \r\n\r\n    async reportMovimentoCamaraOperador({ commit }, options) {\r\n      const parameter = new ParametersExpedicao();\r\n      const chamberToReport: Array<any> = [];\r\n      // 8 CAMARAS, caso aumente, coloca mais aqui e mais parametros no relatorio que vai dar certo ou implemente uma forma melhor =) \r\n      for(let i = 0; i < 8;i++){\r\n        if(options.chambers[i] === undefined || options.chambers[i] === null){\r\n          chamberToReport.push('');  \r\n        }else{\r\n          chamberToReport.push(options.chambers[i]);\r\n        }\r\n      }\r\n      parameter.Chambers = chamberToReport;\r\n      parameter.InitialDate = options.initialDate;\r\n      if(options.registration){\r\n        parameter.Registration = options.registration;\r\n      }\r\n      if(options.endDate){\r\n        parameter.EndDate = options.endDate;\r\n      }\r\n      if(options.shift || options.shift !== ''){\r\n        parameter.Shift = options.shift;\r\n      }\r\n      await commit('setIdReport', options.idReport);\r\n      await commit('setReportModule', options.reportModule);\r\n      await commit('setParams', JSON.stringify(parameter)); \r\n      await commit('setShowReport', true);\r\n    },\r\n\r\n    async getChambersByFilial({ commit }, options){\r\n      const routeAPILogin = `${process.env.VUE_APP_API_URL}/api/expedition/chambers/${options.filial}?`;\r\n      const response = await axios({\r\n        method: 'get',\r\n        url: routeAPILogin\r\n      });\r\n      if (response) {\r\n        if (response.status === 200) {\r\n          await commit('setAllChambers', response.data);\r\n        }\r\n      } \r\n    },\r\n\r\n    async reportCamara({commit }, options){\r\n      const parameter = new ParametersExpedicao();\r\n      const chamberToReport: Array<any> = [];\r\n      // 8 CAMARAS, caso aumente, coloca mais aqui e mais parametros no relatorio que vai dar certo ou implemente uma forma melhor =) \r\n      for(let i = 0; i < 8;i++){\r\n        if(options.chambers[i] === undefined || options.chambers[i] === null){\r\n          chamberToReport.push('');  \r\n        }else{\r\n          chamberToReport.push(options.chambers[i]);\r\n        }\r\n      }\r\n      await commit('setIdReport', options.idReport);\r\n      await commit('setReportModule', options.reportModule);\r\n      await commit('setParams', JSON.stringify(parameter)); \r\n      await commit('setShowReport', true);\r\n    },\r\n\r\n    async getProductName({ commit }, options){\r\n      const routeAPILogin = `${process.env.VUE_APP_API_URL}/api/informations/product/${options.productId}/${options.filialName}?`;\r\n      const response = await axios({\r\n        method: 'get',\r\n        url: routeAPILogin\r\n      });\r\n      if (response) {\r\n        if (response.status === 200) {\r\n          await commit('setProductName', response.data);\r\n        } else {\r\n          await commit('setProductName', null);\r\n        }\r\n      } \r\n    },\r\n\r\n    async getValidPallet({ commit }, options){\r\n      const routeAPILogin = `${process.env.VUE_APP_API_URL}/api/expedition/pallet/${options.filialName}/${options.nrPallet}?`;\r\n      const response = await axios({\r\n        method: 'get',\r\n        url: routeAPILogin\r\n      });\r\n      if (response) {\r\n        if (response.status === 200) {\r\n          await commit('setValidPallet', response.data);\r\n        } else {\r\n          await commit('setValidPallet', null);\r\n        }\r\n      } \r\n    },\r\n\r\n    async ReportLocalizacaoProdutos({commit}, options){\r\n      const parameter = new ParametersExpedicao();\r\n      parameter.CodSicop = options.codSicop;\r\n      parameter.nrPallet = options.nrPallet;\r\n      await commit('setIdReport', options.idReport);\r\n      await commit('setReportModule', options.reportModule);\r\n      await commit('setParams', JSON.stringify(parameter)); \r\n      await commit('setShowReport', true);\r\n    }\r\n\r\n  }\r\n};"],"sourceRoot":""}]}