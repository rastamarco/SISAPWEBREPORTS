{"remainingRequest":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\store\\Expedicao.ts","dependencies":[{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\store\\Expedicao.ts","mtime":1610483488754},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\store\\Expedicao.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport ParametersExpedicao from '../models/parametersExpedicao.model';\r\nimport Product from '../models/product.model';\r\n\r\nexport const Expedicao = {\r\n  state:{\r\n    allChambers: null,\r\n    productName: null,\r\n    validPallet: null,\r\n    box: null,\r\n    validEmploye: null\r\n  },\r\n  getters:{\r\n    allChambers(state){\r\n      return state.allChambers;\r\n    },\r\n    productName(state){\r\n      return state.productName;\r\n    },\r\n    validPallet(state){\r\n      return state.validPallet;\r\n    },\r\n    box(state){\r\n      return state.box;\r\n    },\r\n    validEmploye(state){\r\n      return state.validEmploye;\r\n    }\r\n  },\r\n  mutations:{\r\n    setAllChambers(state, value) {\r\n      state.allChambers = value;\r\n    },\r\n    setProductName(state, value) {\r\n      state.productName = value;\r\n    },\r\n    setValidPallet(state, value){\r\n      state.validPallet = value;\r\n    },\r\n    setBox(state, value){\r\n      state.box = value;\r\n    },\r\n    setValidEmploye(state, value){\r\n      state.validEmploye = value;\r\n    },\r\n  },\r\n  actions:{\r\n    async reportFormacaoPallets({ commit }, options){\r\n      const parameter = new ParametersExpedicao();\r\n      parameter.nrPallet = options.nrPallet;\r\n      await commit('setIdReport', options.idReport);\r\n      await commit('setReportModule', options.reportModule);\r\n      await commit('setParams', JSON.stringify(parameter)); \r\n      await commit('setShowReport', true);\r\n    }, \r\n\r\n    async reportMovimentoCamaraOperador({ commit }, options) {\r\n      const parameter = new ParametersExpedicao();\r\n      const chamberToReport: Array<any> = [];\r\n      // 8 CAMARAS, caso aumente, coloca mais aqui e mais parametros no relatorio que vai dar certo ou implemente uma forma melhor =) \r\n      for(let i = 0; i < 8;i++){\r\n        if(options.chambers[i] === undefined || options.chambers[i] === null){\r\n          chamberToReport.push('');  \r\n        }else{\r\n          chamberToReport.push(options.chambers[i]);\r\n        }\r\n      }\r\n      parameter.Chambers = chamberToReport;\r\n      parameter.InitialDate = options.initialDate;\r\n      if(options.registration){\r\n        parameter.Registration = options.registration;\r\n      }\r\n      if(options.endDate){\r\n        parameter.EndDate = options.endDate;\r\n      }\r\n      if(options.shift || options.shift !== ''){\r\n        parameter.Shift = options.shift;\r\n      }\r\n      await commit('setIdReport', options.idReport);\r\n      await commit('setReportModule', options.reportModule);\r\n      await commit('setParams', JSON.stringify(parameter)); \r\n      await commit('setShowReport', true);\r\n    },\r\n\r\n    async getChambersByFilial({ commit }, options){\r\n      const routeAPILogin = `${process.env.VUE_APP_API_URL}/api/expedition/chambers/${options.filial}?`;\r\n      const response = await axios({\r\n        method: 'get',\r\n        url: routeAPILogin\r\n      });\r\n      if (response) {\r\n        if (response.status === 200) {\r\n          await commit('setAllChambers', response.data);\r\n        }\r\n      } \r\n    },\r\n\r\n    async reportCamara({commit }, options){\r\n      const parameter = new ParametersExpedicao();\r\n      await commit('setIdReport', options.idReport);\r\n      await commit('setReportModule', options.reportModule);\r\n      await commit('setParams', JSON.stringify(parameter)); \r\n      await commit('setShowReport', true);\r\n    },\r\n\r\n    async ReportHistoricoCamaraPallet({commit}, options){\r\n      const parameter = new ParametersExpedicao();\r\n      const chamberToReport: Array<any> = [];\r\n      if(options.codSicop){\r\n        parameter.CodSicop = options.codSicop;\r\n      }\r\n      chamberToReport.push(options.idChamber);\r\n      parameter.Chambers = chamberToReport;\r\n      parameter.InitialDate = options.initialDate;\r\n      parameter.EndDate = options.endDate;\r\n      parameter.localUser = options.filialName;\r\n      await commit('setIdReport', options.idReport);\r\n      await commit('setReportModule', options.reportModule);\r\n      await commit('setParams', JSON.stringify(parameter)); \r\n      await commit('setShowReport', true);\r\n\r\n    },\r\n\r\n    async getProductName({ commit }, options){\r\n      const routeAPILogin = `${process.env.VUE_APP_API_URL}/api/informations/product/${options.productId}/${options.filialName}?`;\r\n      const response = await axios({\r\n        method: 'get',\r\n        url: routeAPILogin\r\n      });\r\n      if (response) {\r\n        if (response.status === 200) {\r\n          await commit('setProductName', response.data);\r\n        } else {\r\n          await commit('setProductName', null);\r\n        }\r\n      } \r\n    },\r\n\r\n    async getValidPallet({ commit }, options){\r\n      const routeAPILogin = `${process.env.VUE_APP_API_URL}/api/expedition/pallet/${options.filialName}/${options.nrPallet}?`;\r\n      const response = await axios({\r\n        method: 'get',\r\n        url: routeAPILogin\r\n      });\r\n      if (response) {\r\n        if (response.status === 200) {\r\n          await commit('setValidPallet', response.data);\r\n        } else {\r\n          await commit('setValidPallet', null);\r\n        }\r\n      } \r\n    },\r\n\r\n    async ReportLocalizacaoProdutos({commit}, options){\r\n      const parameter = new ParametersExpedicao();\r\n      parameter.CodSicop = options.codSicop;\r\n      parameter.nrPallet = options.nrPallet;\r\n      await commit('setIdReport', options.idReport);\r\n      await commit('setReportModule', options.reportModule);\r\n      await commit('setParams', JSON.stringify(parameter)); \r\n      await commit('setShowReport', true);\r\n    },\r\n\r\n    async ReportPosicaoCamaraVazia({commit}, options){\r\n      const parameter = new ParametersExpedicao();\r\n      parameter.localUser = options.filialName;\r\n      await commit('setIdReport', options.idReport);\r\n      await commit('setReportModule', options.reportModule);\r\n      await commit('setParams', JSON.stringify(parameter)); \r\n      await commit('setShowReport', true);\r\n    },\r\n\r\n    async SetIdBox({commit}, options){\r\n      commit('setBox', options.id);\r\n    },\r\n\r\n    async ReportPesoProdutoCamara({commit}, options){\r\n      const parameter = new ParametersExpedicao();\r\n      const chamberToReport: Array<any> = [];\r\n      if(options.codSicop){\r\n        parameter.CodSicop = options.codSicop;\r\n      }\r\n      chamberToReport.push(options.idChamber);\r\n      parameter.Chambers = chamberToReport;\r\n      await commit('setIdReport', options.idReport);\r\n      await commit('setReportModule', options.reportModule);\r\n      await commit('setParams', JSON.stringify(parameter)); \r\n      await commit('setShowReport', true);\r\n    },\r\n\r\n    async ReportProdutosEmbarcados({commit}, options){\r\n      const parameter = new ParametersExpedicao();\r\n      parameter.InitialDate = options.initialDate;\r\n      parameter.nrCarga = options.nrCarga;\r\n      parameter.nrConteiner = options.nrConteiner;\r\n      await commit('setIdReport', options.idReport);\r\n      await commit('setReportModule', options.reportModule);\r\n      await commit('setParams', JSON.stringify(parameter)); \r\n      await commit('setShowReport', true);\r\n    },\r\n\r\n    async ReportEmbarquesPeriodo({commit}, options){\r\n      const parameter = new ParametersExpedicao();\r\n      parameter.InitialDate = options.initialDate;\r\n      parameter.EndDate = options.endDate;\r\n      if (options.nrConferente){\r\n        parameter.nrNote = options.nrConferente;\r\n      }\r\n      await commit('setIdReport', options.idReport);\r\n      await commit('setReportModule', options.reportModule);\r\n      await commit('setParams', JSON.stringify(parameter)); \r\n      await commit('setShowReport', true);\r\n\r\n    },\r\n\r\n    async GetEmployeRegister({ commit }, options){\r\n      const routeAPILogin = `${process.env.VUE_APP_API_URL}/api/users/employe/${options.codSicop}/${options.filialName}?`;\r\n      const response = await axios({\r\n        method: 'get',\r\n        url: routeAPILogin\r\n      });\r\n      if (response) {\r\n        if (response.status === 200) {\r\n          await commit('setValidEmploye', response.data);\r\n        } else {\r\n          await commit('setValidEmploye', null);\r\n        }\r\n      } \r\n    },\r\n\r\n    async ReportEmbarquesDesembarque ({ commit }, options){\r\n      const parameter = new ParametersExpedicao();\r\n      parameter.InitialDate = options.initialDate;\r\n      parameter.EndDate = options.endDate;\r\n      if (options.nrConferente){\r\n        parameter.nrNote = options.nrConferente;\r\n      }\r\n      if(options.shift){\r\n        parameter.Shift = options.shift;\r\n      }\r\n      await commit('setIdReport', options.idReport);\r\n      await commit('setReportModule', options.reportModule);\r\n      await commit('setParams', JSON.stringify(parameter)); \r\n      await commit('setShowReport', true);\r\n    },\r\n  }\r\n};"],"sourceRoot":""}]}