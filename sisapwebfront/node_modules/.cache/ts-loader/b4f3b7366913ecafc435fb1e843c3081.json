{"remainingRequest":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\embarquesDesembarques.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\embarquesDesembarques.vue","mtime":1610484229902},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\embarquesDesembarques.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch\r\n} from 'vue-property-decorator';\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n@Component\r\nexport default class RelatorioEmbarquesPeriodo extends Vue {\r\n  @Prop() clearFields!: any; \r\n\r\n  @Action GetEmployeRegister\r\n  @Action ReportEmbarquesPeriodo\r\n  @Action ReportEmbarquesDesembarque\r\n  @Action noShowReport\r\n\r\n  @Getter showReport\r\n  @Getter validEmploye\r\n  @Getter filialName\r\n  @Getter box\r\n\r\n  private codSicop: any = null;\r\n  private rgShift: any = '3';\r\n  private menu: boolean = false;\r\n  private menu2: boolean = false;\r\n  private date = new Date().toISOString().substr(0, 10);\r\n  private dateFormatted = this.formatDate(new Date().toISOString().substr(0, 10));\r\n  private date2 = new Date().toISOString().substr(0, 10);\r\n  private dateFormatted2 = this.formatDate(new Date().toISOString().substr(0, 10));\r\n  private dateMax = new Date().toISOString().substr(0, 10);\r\n  private dateToSend: any = null;\r\n  private employeValid: boolean = false;\r\n\r\n  public Clear(): void{\r\n    this.dateFormatted = new Date().toISOString().substr(0, 10);\r\n    this.date = new Date().toISOString().substr(0, 10);\r\n    this.dateFormatted2 = new Date().toISOString().substr(0, 10);\r\n    this.date2 = new Date().toISOString().substr(0, 10);\r\n    this.codSicop = null;\r\n    this.rgShift = '3';\r\n    this.employeValid = false;\r\n  }\r\n\r\n   @Watch('clearFields')\r\n  public async onPropertyChangedsClearFields(value: any, oldValue: any): Promise < void > {\r\n    this.Clear();\r\n    this.$emit('resetClearFields');\r\n  }\r\n\r\n   @Watch('date')\r\n   public async onPropertyChangedsDate(value: any, oldValue: any): Promise < void > {\r\n     this.dateFormatted = this.formatDate(value);\r\n     this.$emit('getInitialDate', value);\r\n   }\r\n\r\n   @Watch('date2')\r\n   public async onPropertyChangedsDateEnd(value: any, oldValue: any): Promise < void > {\r\n     this.dateFormatted2 = this.formatDate(value);\r\n     this.$emit('getEndDate', value);\r\n   }\r\n\r\n   @Watch('codSicop')\r\n   public async onPropertyChangedsConferente(value: any, oldValue: any): Promise < void > {\r\n     this.$emit('getCodSicop', value);\r\n     if(value.length > 3){\r\n       await this.GetEmployeRegister({filialName: this.filialName, codSicop: value});\r\n       if(this.validEmploye.coD_MATRICULA === null || this.validEmploye.coD_MATRICULA === 0){\r\n         this.employeValid = true;\r\n       } else { \r\n         this.employeValid = false;\r\n       }\r\n     }\r\n   }\r\n\r\n   @Watch('rgShift')\r\n   public async onPropertyChangedsRgShift(value: any, oldValue: any): Promise < void > {\r\n     this.$emit('getShift', value);\r\n   }\r\n\r\n   public setDate(): void {\r\n     this.menu = false;\r\n     this.menu2 = false;\r\n   }\r\n\r\n   public formatDate(date: string): any {\r\n     if (!date) return null;\r\n     const [year, month, day] = date.split('-');\r\n     return `${day}/${month}/${year}`;\r\n   }\r\n\r\n   public parseDate(date: any): any {\r\n     if (!date) return null;\r\n\r\n     const [day, month, year] = date.split('/');\r\n     return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\r\n   }\r\n\r\n   public async Print(): Promise < void > {\r\n     if(this.showReport === true){\r\n       await this.noShowReport({show: false});\r\n     }\r\n     switch (this.box){\r\n     case 9: \r\n       await this.ReportEmbarquesPeriodos();\r\n       break;\r\n     case 10: \r\n       await this.ReportEmbarquesDesembarques();\r\n     }\r\n   }\r\n\r\n   public async ReportEmbarquesPeriodos(): Promise<void> {\r\n     let initDate = '';\r\n     let finalDate = '';\r\n     if(this.date === this.date2) {\r\n       initDate = this.date;\r\n       finalDate = this.date;\r\n     } else if(this.date > this.date2) {\r\n       this.$swal('Ops!', 'A data Final é menor que a data Inicial.','warning');\r\n       return;\r\n     } else if(this.date < this.date2) {\r\n       initDate = this.date;\r\n       finalDate = this.date2;\r\n     }\r\n     if(this.codSicop === null){\r\n       await this.ReportEmbarquesPeriodo({initialDate: initDate, endDate: finalDate, idReport: 54, reportModule: 2 });\r\n     }else { \r\n       await this.ReportEmbarquesPeriodo({initialDate: initDate, endDate: finalDate, nrConferente: this.codSicop, idReport: 55, reportModule: 2 });\r\n     }\r\n     this.closeModal();\r\n   }\r\n\r\n   public async ReportEmbarquesDesembarques(): Promise<void> {\r\n     let initDate = '';\r\n     let finalDate = '';\r\n     if(this.date === this.date2) {\r\n       initDate = this.date;\r\n       finalDate = this.date;\r\n     } else if(this.date > this.date2) {\r\n       this.$swal('Ops!', 'A data Final é menor que a data Inicial.','warning');\r\n       return;\r\n     } else if(this.date < this.date2) {\r\n       initDate = this.date;\r\n       finalDate = this.date2;\r\n     }\r\n     if(this.codSicop === null && this.rgShift < 3){\r\n       await this.ReportEmbarquesDesembarque({initialDate: initDate, endDate: finalDate, idReport: 56, reportModule: 2 });\r\n     }else if(this.codSicop === null && this.rgShift === 3) { \r\n       await this.ReportEmbarquesDesembarque({initialDate: initDate, endDate: finalDate, nrConferente: this.codSicop, idReport: 57, reportModule: 2 });\r\n     } else if (this.codSicop !== null && this.rgShift < 3){\r\n       await this.ReportEmbarquesDesembarque({initialDate: initDate, endDate: finalDate, nrConferente: this.codSicop, idReport: 58, reportModule: 2 });\r\n     } else if (this.codSicop !== null && this.rgShift === 3){\r\n       await this.ReportEmbarquesDesembarque({initialDate: initDate, endDate: finalDate, nrConferente: this.codSicop, idReport: 59, reportModule: 2 });\r\n     }\r\n   }\r\n\r\n   public closeModal(): void {\r\n     this.$emit('closeModal');\r\n   }\r\n\r\n\r\n} \r\n"],"sourceRoot":""}]}