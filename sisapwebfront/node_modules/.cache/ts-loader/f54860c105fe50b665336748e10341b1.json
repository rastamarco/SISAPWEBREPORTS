{"remainingRequest":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistImpressaoEtiquetas\\Relatorios\\Parametros\\etiquetasPallets.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistImpressaoEtiquetas\\Relatorios\\Parametros\\etiquetasPallets.vue","mtime":1607529107852},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistImpressaoEtiquetas\\Relatorios\\Parametros\\etiquetasPallets.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch\r\n} from 'vue-property-decorator';\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n@Component\r\nexport default class EtiquetasPallets extends Vue {\r\n  @Prop() clearFields!: any; \r\n\r\n  @Action getAllProviders\r\n\r\n  @Getter allProviders\r\n  \r\n  private nrPlaca: any = null;\r\n  private provider: any = null;\r\n  private nrNote: any = null;\r\n  private providerName: any = null;\r\n\r\n  public Clear(): void{\r\n    this.nrPlaca = null;\r\n    this.provider = null;\r\n    this.nrNote = null;\r\n  }\r\n  \r\n  @Watch('clearFields')\r\n  public async onPropertyChangeds(value: any, oldValue: any): Promise < void > {\r\n    this.Clear();\r\n    this.$emit('resetClearFields');\r\n  }\r\n\r\n  @Watch('nrPlaca')\r\n  public async onPropertyChangedNrPlaca(value: any, oldValue: any): Promise < void > {\r\n    this.nrPlaca = value.toUpperCase();\r\n    this.$emit('getNrPlaca', value);\r\n  }\r\n\r\n  @Watch('provider')\r\n  public async onPropertyChangedProvider(value: any, oldValue: any): Promise < void > {\r\n    console.log(this.provider);\r\n    console.log(value);\r\n    for(let i = 0; i< this.allProviders.length; i++) {\r\n      if(this.allProviders[i].cod_Fornecedor === value){\r\n        this.providerName = this.allProviders[i].name;\r\n      }\r\n    }\r\n    this.$emit('getProvider', value, this.providerName);\r\n  }\r\n\r\n  @Watch('nrNote')\r\n  public async onPropertyChangedNrNote(value: any, oldValue: any): Promise < void > {\r\n    this.$emit('getNote', value);\r\n  }\r\n\r\n  public toUpper(placa: any): any {\r\n    return placa.toUpperCase();\r\n  }\r\n\r\n  async mounted(){\r\n    if (this.allProviders === null){\r\n      await this.getAllProviders();\r\n    }\r\n    \r\n  }\r\n  \r\n}\r\n"],"sourceRoot":""}]}