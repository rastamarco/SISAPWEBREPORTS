{"remainingRequest":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\historicoCamaraPallet.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\historicoCamaraPallet.vue","mtime":1610135884393},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\historicoCamaraPallet.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch\r\n} from 'vue-property-decorator';\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n@Component\r\nexport default class HistoricoCamaraPallet extends Vue {\r\n  @Prop() clearFields!: any;\r\n\r\n  @Action getProductName\r\n  @Action getChambersByFilial\r\n\r\n  @Getter filialName\r\n  @Getter allChambers\r\n  @Getter productName\r\n\r\n  private idChambers: any = null;\r\n  private isLoadingChambers: boolean = false;\r\n  private itemStatus: any = ['Armazenado(s)', 'Expedido(s)', 'Excluído(s)'];\r\n  private status: any = null;\r\n  private codSicop: any = null;\r\n  private menu: boolean = false;\r\n  private menu2: boolean = false;\r\n  private date = new Date().toISOString().substr(0, 10);\r\n  private dateFormatted = this.formatDate(new Date().toISOString().substr(0, 10))\r\n  private date2 = new Date().toISOString().substr(0, 10);\r\n  private dateFormatted2 = this.formatDate(new Date().toISOString().substr(0, 10))\r\n  private dateMax = new Date().toISOString().substr(0, 10);\r\n  private ignore: boolean = false;\r\n  private productDescription: any = null;\r\n  private isGettingProduct: boolean = false;\r\n\r\n  public clear(): void{\r\n    this.idChambers = null;\r\n    this.status = null;\r\n    this.codSicop = null;\r\n    this.status = null;\r\n    this.ignore = false;\r\n    this.date = new Date().toISOString().substr(0, 10);\r\n    this.dateFormatted = this.formatDate(new Date().toISOString().substr(0, 10));\r\n    this.date2 = new Date().toISOString().substr(0, 10);\r\n    this.dateFormatted2 = this.formatDate(new Date().toISOString().substr(0, 10));\r\n    this.productDescription = null;\r\n    this.isGettingProduct = false;\r\n  }\r\n\r\n  @Watch('idChambers')\r\n  public async onPropertyChangedsChambers(value: any, oldValue: any): Promise < void > {\r\n    this.$emit('getIdChambers', value);\r\n  }\r\n\r\n  @Watch('codSicop')\r\n  public async onPropertyChangedsSicop(value: any, oldValue: any): Promise < void > {\r\n    if(value && value !== null){\r\n      this.isGettingProduct = true;\r\n    }\r\n    this.$emit('getCodSicop', value);\r\n  }\r\n\r\n  @Watch('clearFields')\r\n  public async onPropertyChangedsClearFields(value: any, oldValue: any): Promise < void > {\r\n    this.clear();\r\n    this.$emit('resetClearFields');\r\n  }\r\n\r\n   @Watch('date')\r\n  public async onPropertyChangedsDate(value: any, oldValue: any): Promise < void > {\r\n    this.dateFormatted = this.formatDate(value);\r\n    this.$emit('getInitialDate', value);\r\n  }\r\n\r\n  @Watch('date2')\r\n   public async onPropertyChangedsDate2(value: any, oldValue: any): Promise < void > {\r\n     this.dateFormatted2 = this.formatDate(value);\r\n     this.$emit('getEndDate', value);\r\n   }\r\n\r\n  @Watch('status')\r\n  public async onPropertyChangedsStatus(value: any, oldValue: any): Promise < void > {\r\n    this.$emit('GetStatus', value);\r\n  }\r\n\r\n  public setDate(): void {\r\n    this.menu = false;\r\n    this.menu2 = false;\r\n  }\r\n\r\n  public formatDate(date: string): any {\r\n    if (!date) return null;\r\n    const [year, month, day] = date.split('-');\r\n    return `${day}/${month}/${year}`;\r\n  }\r\n\r\n  public parseDate(date: any): any {\r\n    if (!date) return null;\r\n\r\n    const [day, month, year] = date.split('/');\r\n    return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\r\n  }\r\n\r\n  public async GetProductName(product: number): Promise<void>{\r\n    if(product && product !== null){\r\n      await this.getProductName({filialName: this.filialName, productId: product });\r\n      this.isGettingProduct = false;\r\n      if(this.productName === null || this.productName.cod === 0){\r\n        this.productDescription = 'Produto Inválido, informe outro código';\r\n      }else { \r\n        this.$emit('getCodSicop', product);\r\n        this.productDescription = this.productName.embalagem;\r\n      }\r\n    }else { \r\n      this.productDescription = '';\r\n    }\r\n  }\r\n\r\n  public InitialParameters(): void{\r\n    this.$emit('getInitialDate', this.date);\r\n    this.$emit('getEndDate', this.date);\r\n  }\r\n\r\n  async mounted() {\r\n    if (this.allChambers === null) {\r\n      this.isLoadingChambers = true;\r\n      await this.getChambersByFilial({filial: this.filialName });\r\n      this.isLoadingChambers = false;\r\n    }\r\n    this.InitialParameters();\r\n  }\r\n} \r\n"],"sourceRoot":""}]}