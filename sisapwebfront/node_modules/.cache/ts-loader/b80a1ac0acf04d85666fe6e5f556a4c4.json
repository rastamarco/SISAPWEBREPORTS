{"remainingRequest":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistApontamentosProducao\\Relatorios\\Parametros\\ApontamentoRefeitorio.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistApontamentosProducao\\Relatorios\\Parametros\\ApontamentoRefeitorio.vue","mtime":1613587983051},{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613587965760},{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js","mtime":1613587964762},{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js","mtime":1613587978150},{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613587965760},{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":1613587979922}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistApontamentosProducao\\Relatorios\\Parametros\\ApontamentoRefeitorio.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch\r\n} from 'vue-property-decorator';\r\nimport _ from 'vuetify/es5/components/*';\r\n\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n\r\n@Component\r\nexport default class ApontamentoRefeitorio extends Vue {\r\n\r\n  @Prop() clearFields!: any;\r\n\r\n  @Action reportApontamentoRefeitorio\r\n  @Action noShowReport\r\n\r\n  @Getter showReport\r\n  @Getter filialName\r\n  @Getter loginUser\r\n  @Getter userFeatures\r\n\r\n  private menu: boolean = false;\r\n  private menu2: boolean = false;\r\n  private date = new Date().toISOString().substr(0, 10);\r\n  private date2 = new Date().toISOString().substr(0, 10);\r\n  private dateMax = new Date().toISOString().substr(0, 10);\r\n  private dateFormatted = this.formatDate(new Date().toISOString().substr(0, 10));\r\n  private date2Formatted = this.formatDate(new Date().toISOString().substr(0, 10));\r\n  private dateToSend: any = null;\r\n  private dateToSend2: any = null;\r\n  private turnoGroup: any = 1;\r\n  private isPeriod: boolean = false;\r\n  private InitialHour: any = null;\r\n  private EndHour: any = null;\r\n\r\n  public clear(): void {\r\n    this.date = new Date().toISOString().substr(0, 10);\r\n    this.date2 = new Date().toISOString().substr(0, 10);\r\n    this.turnoGroup = 1;\r\n    this.isPeriod = false;\r\n    this.dateToSend = null;\r\n    this.dateToSend2 = null;\r\n  }\r\n\r\n  @Watch('clearFields')\r\n  public async onPropertyChangedClearFields(value: any, oldValue: any): Promise < void > {\r\n    this.clear();\r\n    this.$emit('resetClearFields');\r\n  }\r\n\r\n  public getShifts(n: any): any{\r\n    switch(n){\r\n    case 1: \r\n      return '1º Turno - (06:00 às 15:30)';\r\n    case 2:\r\n      return '2º Turno - (15:31 às 01:00)';\r\n    case 3: \r\n      return '3º Turno - (01:00 às 05:59)';\r\n    case 4:\r\n      return 'Todos';  \r\n    }\r\n    \r\n  }\r\n\r\n  public setDate(data: any): void {\r\n    let newDate;\r\n    if (this.turnoGroup === 3){\r\n      newDate = this.addDay(data);\r\n    }else{\r\n      newDate = data;\r\n    }\r\n    this.getDate(newDate, this.isPeriod);\r\n    this.menu = false;\r\n  }\r\n\r\n  public setDate2(data: any): void {\r\n    let newDate;\r\n    if (this.turnoGroup === 3){\r\n      newDate = this.addDay(data);\r\n    }else{\r\n      newDate = data;\r\n    }\r\n    this.getDateEnd(newDate, this.isPeriod);\r\n    this.menu2 = false;\r\n  }\r\n\r\n  public getDate(date: any, isPeriod: any): void{\r\n    this.dateToSend = date;\r\n    this.isPeriod = isPeriod;\r\n  }\r\n\r\n  public getDateEnd(date: any, isPeriod: any): void{\r\n    this.dateToSend2 = date;\r\n    this.isPeriod = isPeriod;\r\n  }\r\n\r\n  public formatDate(date: string): any {\r\n    if (!date) return null;\r\n    const [year, month, day] = date.split('-');\r\n    return `${day}/${month}/${year}`;\r\n  }\r\n\r\n  public addDay(date: string): any {\r\n    if (!date) return null;\r\n    const [year, month, day] = date.split('-');\r\n    return `${year}/${month}/${parseInt(day)+1}`;\r\n  }\r\n\r\n  public parseDate(date: any): any {\r\n    if (!date) return null;\r\n    const [day, month, year] = date.split('/');\r\n    return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\r\n  }\r\n\r\n  @Watch('date')\r\n  public async onPropertyChangedsInitialDate(value: any, oldValue: any): Promise < void > {\r\n    this.dateFormatted = this.formatDate(value);\r\n    this.setDate(value);\r\n  }\r\n\r\n  @Watch('date2')\r\n  public async onPropertyChangedFinalDate(value: any, oldValue: any): Promise < void > {\r\n    this.date2Formatted = this.formatDate(value);\r\n    this.setDate(value);\r\n  }\r\n\r\n  @Watch('turnoGroup')\r\n  public async onPropertyChangedTurnoGroup(value: any, oldValue: any): Promise <void>{\r\n    this.setDate(this.date);\r\n    this.setDate2(this.date2);\r\n  }\r\n\r\n  public closeModal(): void{\r\n    this.$emit('closeModal');\r\n  }\r\n\r\n  public async Print(): Promise < void > {\r\n    if(this.showReport === true){\r\n      await this.noShowReport({show: false});\r\n    }\r\n    await this.ApontamentoRefeitorio();\r\n    this.closeModal();\r\n  }\r\n\r\n  public async ApontamentoRefeitorio(): Promise<void>{\r\n    await this.getShiftHours();\r\n    let newShift;\r\n    if(this.turnoGroup === 4)\r\n      newShift = 'Todos';\r\n    else\r\n      newShift = this.turnoGroup;\r\n    \r\n    switch(this.isPeriod){\r\n    case false: \r\n      await this.reportApontamentoRefeitorio({\r\n        InitialDate: this.dateToSend+' 00:00:00',\r\n        EndDate: this.dateToSend+' 23:59:59',\r\n        InitialHour: this.InitialHour,\r\n        EndHour:this.EndHour,\r\n        shift: newShift, \r\n        idReport: 16, \r\n        reportModule: 1 \r\n      });\r\n      break;\r\n    case true:\r\n      if(this.date < this.date2) {\r\n        await this.reportApontamentoRefeitorio({\r\n          InitialDate: this.dateToSend+' 00:00:00', \r\n          EndDate: this.dateToSend2+' 23:59:59',\r\n          InitialHour: this.InitialHour,\r\n          EndHour:this.EndHour, \r\n          shift: newShift, \r\n          idReport: 16, \r\n          reportModule: 1 });\r\n      } else {  \r\n        this.$swal('Ops!', 'A Data Inicial informada é maior que a Data Final, corrija-as e tente novamente', 'error');\r\n      }\r\n    }\r\n  }\r\n\r\n  public async getShiftHours(): Promise<any>{\r\n    switch(this.turnoGroup){\r\n    case 1: \r\n      this.InitialHour = '06:00:00';\r\n      this.EndHour = '15:30:59';\r\n      break;\r\n    case 2: \r\n      this.InitialHour = '15:31:00';\r\n      this.EndHour = '23:59:59';\r\n      break;\r\n    case 3:\r\n      this.InitialHour = '00:00:00';\r\n      this.EndHour = '05:59:59';\r\n      break;\r\n    case 4:\r\n      this.InitialHour = '00:00:00';\r\n      this.EndHour = '23:59:59';\r\n      break;\r\n    }\r\n  }\r\n\r\n  mounted() {\r\n    this.dateToSend = this.date;\r\n    this.dateToSend2 = this.date; \r\n  }\r\n}\r\n\r\n"],"sourceRoot":""}]}