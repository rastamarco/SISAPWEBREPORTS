{"remainingRequest":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistApontamentosProducao\\Relatorios\\relatoriosSidebar.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistApontamentosProducao\\Relatorios\\relatoriosSidebar.vue","mtime":1607977156233},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvTGFyL3NvdXJjZS9yZXBvcy9zaXNhcFdlYkFwaS9TSVNBUFdFQlJFUE9SVFMvc2lzYXB3ZWJmcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiQzovVXNlcnMvTGFyL3NvdXJjZS9yZXBvcy9zaXNhcFdlYkFwaS9TSVNBUFdFQlJFUE9SVFMvc2lzYXB3ZWJmcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkM6L1VzZXJzL0xhci9zb3VyY2UvcmVwb3Mvc2lzYXBXZWJBcGkvU0lTQVBXRUJSRVBPUlRTL3Npc2Fwd2ViZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICJDOi9Vc2Vycy9MYXIvc291cmNlL3JlcG9zL3Npc2FwV2ViQXBpL1NJU0FQV0VCUkVQT1JUUy9zaXNhcHdlYmZyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiQzovVXNlcnMvTGFyL3NvdXJjZS9yZXBvcy9zaXNhcFdlYkFwaS9TSVNBUFdFQlJFUE9SVFMvc2lzYXB3ZWJmcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIiOwppbXBvcnQgeyBfX2RlY29yYXRlIH0gZnJvbSAidHNsaWIiOwppbXBvcnQgeyBDb21wb25lbnQsIFZ1ZSB9IGZyb20gJ3Z1ZS1wcm9wZXJ0eS1kZWNvcmF0b3InOwppbXBvcnQgeyBBY3Rpb24sIEdldHRlciB9IGZyb20gJ3Z1ZXgtY2xhc3MnOwppbXBvcnQgSW5wdXRNb2RhbHMgZnJvbSAnLi9pbnB1dE1vZGFsLnZ1ZSc7Cgp2YXIgQXBvbnRhbWVudG9zUmVsYXRvcmlvcyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1Z1ZSkgewogIF9pbmhlcml0cyhBcG9udGFtZW50b3NSZWxhdG9yaW9zLCBfVnVlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihBcG9udGFtZW50b3NSZWxhdG9yaW9zKTsKCiAgZnVuY3Rpb24gQXBvbnRhbWVudG9zUmVsYXRvcmlvcygpIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXBvbnRhbWVudG9zUmVsYXRvcmlvcyk7CgogICAgX3RoaXMgPSBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIC8qIGVzbGludC1kaXNhYmxlIGluZGVudCAqLwoKICAgIF90aGlzLm1vZGFsUmVwb3J0cyA9IGZhbHNlOwogICAgX3RoaXMubmFtZUJveCA9IG51bGw7CiAgICBfdGhpcy5pZEJveCA9IG51bGw7CiAgICBfdGhpcy5pdGVtc1JlcG9ydHMgPSBbewogICAgICBpY29uOiAnbWRpLWZpbGUtY2hhcnQnLAogICAgICB0aXRsZTogJ1JlbGF0w7NyaW9zJywKICAgICAgaXRlbXM6IFt7CiAgICAgICAgaWQ6IDEsCiAgICAgICAgdGl0bGU6ICdBcG9udGFtZW50byBkYSBQcm9kdcOnw6NvJywKICAgICAgICBzaG93OiAnJwogICAgICB9LCB7CiAgICAgICAgaWQ6IDIsCiAgICAgICAgdGl0bGU6ICdBcG9udGFtZW50byBkZSBSZWZlaXTDs3JpbycsCiAgICAgICAgc2hvdzogJ3VpYS1jb25nZWwnCiAgICAgIH1dCiAgICB9XTsKICAgIF90aGlzLml0ZW1zUmVwb3J0c0J5VXNlciA9IFtdOwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEFwb250YW1lbnRvc1JlbGF0b3Jpb3MsIFt7CiAgICBrZXk6ICJzZWxlY3RSZXBvcnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9zZWxlY3RSZXBvcnQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoaXRlbSkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gaXRlbS5pZDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSBfY29udGV4dC50MCA9PT0gMSA/IDMgOiBfY29udGV4dC50MCA9PT0gMiA/IDYgOiA5OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIC8vIFVJQSAKICAgICAgICAgICAgICAgIHRoaXMubmFtZUJveCA9ICdJbXByZXNzw6NvIGRlIEFwb250YW1lbnRvIGRlIFByb2R1w6fDo28nOwogICAgICAgICAgICAgICAgdGhpcy5pZEJveCA9IDE7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJicmVhayIsIDEwKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgdGhpcy5uYW1lQm94ID0gJ0ltcHJlc3PDo28gZGUgQXBvbnRhbWVudG8gZGUgUmVmZWl0w7NyaW8nOwogICAgICAgICAgICAgICAgdGhpcy5pZEJveCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJicmVhayIsIDEwKTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgiYnJlYWsiLCAxMCk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gc2VsZWN0UmVwb3J0KF94KSB7CiAgICAgICAgcmV0dXJuIF9zZWxlY3RSZXBvcnQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHNlbGVjdFJlcG9ydDsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImNsb3NlTW9kYWwiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNsb3NlTW9kYWwoKSB7CiAgICAgIHRoaXMubW9kYWxSZXBvcnRzID0gZmFsc2U7CiAgICB9CiAgfSwgewogICAga2V5OiAibGlzdFJlcG9ydHNCeVVzZXJQZXJtaXNzaW9uIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfbGlzdFJlcG9ydHNCeVVzZXJQZXJtaXNzaW9uID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgICAgdmFyIGxpc3RSZXBvcnRzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBsaXN0UmVwb3J0cyA9IFtdOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gdGhpcy5pc1N5c0FkbWluOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSBfY29udGV4dDIudDAgPT09IHRydWUgPyA0IDogNjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICB0aGlzLml0ZW1zUmVwb3J0c0J5VXNlciA9IHRoaXMuaXRlbXNSZXBvcnRzOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoImJyZWFrIiwgMTApOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICB0aGlzLml0ZW1zUmVwb3J0c0J5VXNlci5wdXNoKHsKICAgICAgICAgICAgICAgICAgaWNvbjogJ21kaS1maWxlLWNoYXJ0JywKICAgICAgICAgICAgICAgICAgdGl0bGU6ICdSZWxhdMOzcmlvcycsCiAgICAgICAgICAgICAgICAgIGl0ZW1zOiBudWxsCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHRoaXMuaXRlbXNSZXBvcnRzWzBdLml0ZW1zLmZvckVhY2goZnVuY3Rpb24gKHJlcG9ydEl0ZW1zKSB7CiAgICAgICAgICAgICAgICAgIGlmIChyZXBvcnRJdGVtcy5zaG93ID09PSBfdGhpczIubG9naW5Vc2VyIHx8IHJlcG9ydEl0ZW1zLnNob3cgPT09ICcnKSB7CiAgICAgICAgICAgICAgICAgICAgbGlzdFJlcG9ydHMucHVzaChyZXBvcnRJdGVtcyk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgdGhpcy5pdGVtc1JlcG9ydHNCeVVzZXJbMF0uaXRlbXMgPSBsaXN0UmVwb3J0czsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJicmVhayIsIDEwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGxpc3RSZXBvcnRzQnlVc2VyUGVybWlzc2lvbigpIHsKICAgICAgICByZXR1cm4gX2xpc3RSZXBvcnRzQnlVc2VyUGVybWlzc2lvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gbGlzdFJlcG9ydHNCeVVzZXJQZXJtaXNzaW9uOwogICAgfSgpCiAgfSwgewogICAga2V5OiAibW91bnRlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX21vdW50ZWQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICB0aGlzLmxpc3RSZXBvcnRzQnlVc2VyUGVybWlzc2lvbigpOwoKICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgICAgIHJldHVybiBfbW91bnRlZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gbW91bnRlZDsKICAgIH0oKQogIH1dKTsKCiAgcmV0dXJuIEFwb250YW1lbnRvc1JlbGF0b3Jpb3M7Cn0oVnVlKTsKCl9fZGVjb3JhdGUoW0FjdGlvbl0sIEFwb250YW1lbnRvc1JlbGF0b3Jpb3MucHJvdG90eXBlLCAic2V0U2VsZWN0ZWRJZFJlcG9ydCIsIHZvaWQgMCk7CgpfX2RlY29yYXRlKFtHZXR0ZXJdLCBBcG9udGFtZW50b3NSZWxhdG9yaW9zLnByb3RvdHlwZSwgImxvZ2luVXNlciIsIHZvaWQgMCk7CgpfX2RlY29yYXRlKFtHZXR0ZXJdLCBBcG9udGFtZW50b3NSZWxhdG9yaW9zLnByb3RvdHlwZSwgImlzU3lzQWRtaW4iLCB2b2lkIDApOwoKQXBvbnRhbWVudG9zUmVsYXRvcmlvcyA9IF9fZGVjb3JhdGUoW0NvbXBvbmVudCh7CiAgY29tcG9uZW50czogewogICAgSW5wdXRNb2RhbHM6IElucHV0TW9kYWxzCiAgfQp9KV0sIEFwb250YW1lbnRvc1JlbGF0b3Jpb3MpOwpleHBvcnQgZGVmYXVsdCBBcG9udGFtZW50b3NSZWxhdG9yaW9zOw=="},{"version":3,"sources":["C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistApontamentosProducao\\Relatorios\\relatoriosSidebar.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {\r\n  Component,\r\n  Vue\r\n} from 'vue-property-decorator';\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n\r\nimport InputModals from './inputModal.vue';\r\n@Component({\r\n  components: {\r\n    InputModals\r\n  }\r\n})\r\nexport default class ApontamentosRelatorios extends Vue {\r\n  @Action setSelectedIdReport\r\n  \r\n  @Getter loginUser\r\n  @Getter isSysAdmin\r\n  /* eslint-disable indent */\r\n  private modalReports: boolean = false;\r\n  private nameBox: any = null;\r\n  private idBox: any = null;\r\n\r\n  private itemsReports: Array < any > = [{\r\n    icon: 'mdi-file-chart',\r\n    title: 'Relatórios',\r\n    items: [{\r\n        id: 1,\r\n        title: 'Apontamento da Produção',\r\n        show: ''\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Apontamento de Refeitório',\r\n        show: 'uia-congel'\r\n      }\r\n    ]\r\n  }, ]\r\n  private itemsReportsByUser: Array<any> = [];\r\n  \r\n  public async selectReport(item: any): Promise<void> {\r\n    switch (item.id) {\r\n      case 1:\r\n        // UIA \r\n        this.nameBox = 'Impressão de Apontamento de Produção';\r\n        this.idBox = 1;\r\n      break;\r\n      case 2:\r\n        this.nameBox = 'Impressão de Apontamento de Refeitório';\r\n        this.idBox = 2;\r\n      break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public closeModal(): void {\r\n    this.modalReports = false;\r\n  }\r\n\r\n  public async  listReportsByUserPermission(): Promise<void> {\r\n      const listReports: Array<any>=[];\r\n      switch(this.isSysAdmin){\r\n        case true: \r\n          this.itemsReportsByUser = this.itemsReports;\r\n          break;\r\n        default: \r\n          this.itemsReportsByUser.push({ icon: 'mdi-file-chart', title: 'Relatórios', items: null});\r\n          this.itemsReports[0].items.forEach(reportItems => {\r\n            if(reportItems.show ===  this.loginUser || reportItems.show === ''){ \r\n              listReports.push(reportItems);\r\n            }\r\n          });\r\n          this.itemsReportsByUser[0].items = listReports;\r\n        break;\r\n      }\r\n  }\r\n\r\n   async mounted(){\r\n    this.listReportsByUserPermission();\r\n  }\r\n}\r\n"],"sourceRoot":""}]}