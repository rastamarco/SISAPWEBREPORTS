{"remainingRequest":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleProducao\\Relatorios\\Parametros\\MapaMensalProducao.vue?vue&type=style&index=0&id=15af8892&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleProducao\\Relatorios\\Parametros\\MapaMensalProducao.vue","mtime":1613587983067},{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\css-loader\\dist\\cjs.js","mtime":1613587967350},{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1613587979925},{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\postcss-loader\\src\\index.js","mtime":1613587973098},{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613587965760},{"path":"C:\\Users\\Lar\\Desktop\\Nova pasta\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":1613587979922}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5pbnB1dC1wYXJhbWV0ZXJzew0KICBkaXNwbGF5OmZsZXg7DQogIGp1c3RpZnktY29udGVudDpjZW50ZXI7DQogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIHBhZGRpbmctdG9wOiAyNXB4Ow0KfQ0KDQouaW5wdXQtcGFyYW1ldGVycyAuaW5wdXRzew0KICBtYXgtd2lkdGg6IDUwJTsNCiAgcGFkZGluZy10b3A6IDVweDsNCn0NCg=="},{"version":3,"sources":["MapaMensalProducao.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"MapaMensalProducao.vue","sourceRoot":"src/views/SistGerenciamentoProducao/SistControleProducao/Relatorios/Parametros","sourcesContent":["<template>\r\n  <v-row>\r\n      <v-col cols=\"12\" sm=\"6\" md=\"12\" class=\"input-parameters\">\r\n          <span style=\"font-size: 14px;\"> Selecione o Mês: </span>\r\n          <v-menu v-model=\"menu\" :close-on-content-click=\"false\" :nudge-right=\"40\" transition=\"scale-transition\" offset-y min-width=\"290px\">\r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n              <v-text-field  v-model=\"dateFormatted\" @blur=\"date = parseDate(dateFormatted)\" prepend-icon=\"mdi-calendar\" \r\n              readonly outlined hide-details dense v-bind=\"attrs\" v-on=\"on\" class=\"inputs\"></v-text-field>\r\n            </template>\r\n          <v-date-picker v-model=\"date\" type=\"month\" locale=\"pt\" min=\"1950-01-01\" :max=\"dateMax\" >\r\n            <v-spacer></v-spacer>\r\n              <v-btn text color=\"primary\" @click=\"menu = false\"> Cancel</v-btn>\r\n              <v-btn text color=\"primary\" @click=\"SendDate(date)\">OK</v-btn>\r\n          </v-date-picker>\r\n        </v-menu>\r\n      </v-col>\r\n      <v-col cols=\"12\" sm=\"6\" md=\"12\" class=\"input-parameters\">\r\n        <span style=\"font-size: 14px;\">Linha de Produção</span>\r\n        <v-radio-group v-model=\"rgLineProd\" dense row class=\"inputs\">\r\n          <v-radio label=\"Linha 1\" value=\"1\" dense></v-radio>\r\n          <v-radio label=\"Linha 2\" value=\"2\" dense></v-radio>\r\n        </v-radio-group>\r\n      </v-col>\r\n       <v-btn absolute rounded text bottom left color=\"primary\" @click=\"closeModal()\" style=\"text-transform: none;\">\r\n      Cancelar\r\n    </v-btn>\r\n    <v-btn absolute rounded bottom right color=\"primary\" @click=\"Print()\" style=\"text-transform: none;\">\r\n      <v-icon>mdi-printer</v-icon>\r\n      Imprimir\r\n    </v-btn> \r\n  </v-row>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch\r\n} from 'vue-property-decorator';\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n@Component\r\nexport default class MapaMensalProducao extends Vue {\r\n  @Prop() clearFields!: any; \r\n  \r\n  @Action reportMapaMensal\r\n  @Action noShowReport\r\n\r\n  @Getter filialName\r\n  @Getter showReport\r\n\r\n  private date: any = new Date().toISOString().substr(0, 7) ;\r\n  private menu: boolean = false;\r\n  private dateMax = new Date().toISOString().substr(0, 7);\r\n  private dateFormatted = this.formatDate(new Date().toISOString().substr(0, 7))\r\n  private rgLineProd: any = 1;\r\n  private line: any= null;\r\n  private year: any = null;\r\n  private month: any = null;\r\n\r\n  @Watch('clearFields')\r\n  public async onPropertyChangeds(value: any, oldValue: any): Promise < void > {\r\n    this.date = new Date().toISOString().substr(0, 7);\r\n    this.rgLineProd = 1;\r\n    this.$emit('resetClearFields');\r\n  }\r\n\r\n  @Watch('rgLineProd')\r\n  public async onPropertyChangedsRgLineProd(value: any, oldValue: any): Promise < void > {\r\n    this.getLineProd(value);\r\n  }\r\n\r\n  @Watch('date')\r\n  public async onPropertyChangedsDate(value: any, oldValue: any): Promise < void > {\r\n    this.dateFormatted = this.formatDate(value);\r\n  }\r\n\r\n  public getLineProd(line: any): void{\r\n    switch(this.filialName){\r\n    case 'UIC':\r\n      switch(line){\r\n      case 1:\r\n        this.line = 'Coz/Ass/Emp';\r\n        break;\r\n      case 2: \r\n        this.line = 'L2UIC';\r\n        break;\r\n      }\r\n      break;\r\n    case 'UIA':\r\n      switch(line){\r\n      case 1:\r\n        this.line = 'Aves';\r\n        break;\r\n      case 2: \r\n        this.line = 'L2';\r\n        break;\r\n      }\r\n      break;\r\n    }\r\n  }\r\n\r\n  public formatDate(date: string): any {\r\n    if (!date) return null;\r\n    const [year, month, day] = date.split('-');\r\n    return `${month}/${year}`;\r\n  }\r\n\r\n  public parseDate(date: any): any {\r\n    if (!date) return null;\r\n    const [month, year] = date.split('/');\r\n    return `${year}-${month.padStart(2, '0')}`;\r\n  }\r\n\r\n  public SendDate(date: any): void {\r\n    this.menu = false;\r\n    this.getMonthYear(date);\r\n  }\r\n\r\n  public getMonthYear(date: any): void{  \r\n    this.year = date.split('-')[0];\r\n    this.month = date.split('-')[1];\r\n  }\r\n\r\n  public closeModal(): void{\r\n    this.$emit('closeModal');\r\n  }\r\n\r\n  public async Print(): Promise < void > {\r\n    if(this.showReport === true){\r\n      await this.noShowReport({show: false});\r\n    }\r\n    await this.MapaMensal();\r\n    this.closeModal();\r\n  }\r\n\r\n  public async MapaMensal(): Promise<void>{\r\n    const initialDate = this.year+'-'+this.month+'-01';\r\n    const endDate = this.year+'-'+this.month+'-30';\r\n    await this.reportMapaMensal({ initialDate: initialDate, endDate: endDate, localUser: this.filialName, line: this.line, reportModule: 4, idReport: 1 });\r\n  }\r\n\r\n}\r\n</script>\r\n<style scoped>\r\n.input-parameters{\r\n  display:flex;\r\n  justify-content:center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 25px;\r\n}\r\n\r\n.input-parameters .inputs{\r\n  max-width: 50%;\r\n  padding-top: 5px;\r\n}\r\n</style>"]}]}