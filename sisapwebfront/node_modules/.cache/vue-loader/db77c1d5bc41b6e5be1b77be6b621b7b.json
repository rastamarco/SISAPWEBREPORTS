{"remainingRequest":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistImpressaoEtiquetas\\Relatorios\\Parametros\\etiquetasPallets.vue?vue&type=style&index=0&id=040f63d4&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistImpressaoEtiquetas\\Relatorios\\Parametros\\etiquetasPallets.vue","mtime":1607536609583},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoNCi5pbnB1dHMtdGV4dHsNCiAgZGlzcGxheTogZmxleDsNCiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIHBhZGRpbmc6MDsNCn0NCg0KLmlucHV0cy10ZXh0IC50ZXh0c3sNCiAgZGlzcGxheTogZmxleDsNCiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgd2lkdGg6NTAlOw0KICBoZWlnaHQ6MTAwJTsNCn0NCg=="},{"version":3,"sources":["etiquetasPallets.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"etiquetasPallets.vue","sourceRoot":"src/views/SistImpressaoEtiquetas/Relatorios/Parametros","sourcesContent":["<template>\r\n  <v-row>\r\n      <v-col cols=\"12\" sm=\"6\" md=\"12\" class=\"inputs-text\">\r\n          <div class=\"texts\">\r\n            <span style=\"font-size: 14px; opacity: 0.7;\">Fornecedores</span>\r\n            <v-autocomplete v-model=\"provider\" filled rounded \r\n              :items=\"allProviders\" \r\n              item-text=\"desc_Fornecedor\" \r\n              item-value=\"cod_Fornecedor\" \r\n              dense \r\n              label=\"Fornecedores \" style=\"padding-top:5px;\" hide-details no-data-text=\"Fornecedor não Encontrado!\"></v-autocomplete>\r\n              <span style=\"font-size: 10px; opacity: 0.7;\" v-if=\"loadingProviders === false\">Não foi possível obter a lista de Fornecedores</span>\r\n          </div>\r\n          <div class=\"texts\">\r\n          <span style=\"font-size: 14px; opacity: 0.7;padding-top:3px;\">Nº da Placa</span>\r\n          <v-text-field v-model=\"nrPlaca\" filled  rounded v-mask=\"'XXX-####'\" type=\"text\" placeholder=\"###-####\" hide-details  ></v-text-field>\r\n          </div>\r\n          <div class=\"texts\">\r\n            <span style=\"font-size: 14px; opacity: 0.7;padding-top:3px;\">Nº da Nota</span>\r\n            <v-text-field v-model=\"nrNote\" filled rounded placeholder=\"############\" hide-details></v-text-field>\r\n          </div>\r\n      </v-col>\r\n  </v-row>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch\r\n} from 'vue-property-decorator';\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n@Component\r\nexport default class EtiquetasPallets extends Vue {\r\n  @Prop() clearFields!: any; \r\n\r\n  @Action getAllProviders\r\n\r\n  @Getter allProviders\r\n  @Getter loadingProviders\r\n\r\n  private nrPlaca: any = null;\r\n  private provider: any = null;\r\n  private nrNote: any = null;\r\n  private providerName: any = null;\r\n  // private loadingProviders: any = null;\r\n\r\n  public Clear(): void{\r\n    this.nrPlaca = null;\r\n    this.provider = null;\r\n    this.nrNote = null;\r\n  }\r\n  \r\n  @Watch('clearFields')\r\n  public async onPropertyChangeds(value: any, oldValue: any): Promise < void > {\r\n    this.Clear();\r\n    this.$emit('resetClearFields');\r\n  }\r\n\r\n  @Watch('nrPlaca')\r\n  public async onPropertyChangedNrPlaca(value: any, oldValue: any): Promise < void > {\r\n    this.nrPlaca = value.toUpperCase();\r\n    this.$emit('getNrPlaca', value);\r\n  }\r\n\r\n  @Watch('provider')\r\n  public async onPropertyChangedProvider(value: any, oldValue: any): Promise < void > {\r\n    for(let i = 0; i< this.allProviders.length; i++) {\r\n      if(this.allProviders[i].cod_Fornecedor === value){\r\n        this.providerName = this.allProviders[i].desc_Fornecedor;\r\n      }\r\n    }\r\n    this.$emit('getProvider', value, this.providerName);\r\n  }\r\n\r\n  @Watch('nrNote')\r\n  public async onPropertyChangedNrNote(value: any, oldValue: any): Promise < void > {\r\n    this.$emit('getNote', value);\r\n  }\r\n\r\n  public toUpper(placa: any): any {\r\n    return placa.toUpperCase();\r\n  }\r\n\r\n  async mounted(){\r\n    if (this.allProviders === null){\r\n      await this.getAllProviders();\r\n    }\r\n    \r\n  }\r\n  \r\n}\r\n</script>\r\n<style scoped>\r\n\r\n.inputs-text{\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding:0;\r\n}\r\n\r\n.inputs-text .texts{\r\n  display: flex;\r\n  flex-direction: column;\r\n  width:50%;\r\n  height:100%;\r\n}\r\n</style>"]}]}