{"remainingRequest":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\movimentoCamaraOperador.vue?vue&type=style&index=0&id=c4361a8a&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\src\\views\\SistGerenciamentoProducao\\SistControleExpedição\\Relatorios\\Parametros\\movimentoCamaraOperador.vue","mtime":1606907077911},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lar\\source\\repos\\sisapWebApi\\SISAPWEBREPORTS\\sisapwebfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoubG9hZGluZ3sNCiAgZGlzcGxheTpmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOw0KfQ0KDQouY29udGVudC1jaGVja2JveHsNCiAgZGlzcGxheTpmbGV4Ow0KICBmbGV4LWRpcmVjdGlvbjogcm93Ow0KICB3aWR0aDogODAlOw0KICBmbGV4LXdyYXA6IHdyYXA7DQp9DQoNCi5jb250ZW50LWNoZWNrYm94IC5pdGVtLWNoZWNrYm94ew0KICBkaXNwbGF5OiBmbGV4Ow0KICBmbGV4LWRpcmVjdGlvbjogcm93Ow0KICBwYWRkaW5nLWxlZnQ6IDEwcHg7DQogIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7DQogIG1hcmdpbjowOw0KfQ0KDQo="},{"version":3,"sources":["movimentoCamaraOperador.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0MA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"movimentoCamaraOperador.vue","sourceRoot":"src/views/SistGerenciamentoProducao/SistControleExpedição/Relatorios/Parametros","sourcesContent":["<template>\r\n      <v-row >\r\n      <v-col cols=\"2\" sm=\"2\" md=\"5\" style=\"padding-left:40px;\">\r\n        <small>Selecione a(s) Câmara(s):</small>\r\n        <v-checkbox v-model=\"selectChambers\" label=\"Todas\" dense style=\"transform: scale(0.95);margin:0;\"></v-checkbox>\r\n        <div class=\"content-checkbox\" v-if=\"!isLoadingChambers\" > \r\n          <div v-for=\"items in allChambers\" :key=\"items.cod_camara\">\r\n            <v-checkbox\r\n              v-model=\"idChambers\"\r\n              :label=\"items.cod_camara\"\r\n              :value=\"items.cod_camara\"\r\n              class=\"item-checkbox\"\r\n              dense\r\n            ></v-checkbox>\r\n          </div>\r\n        </div>\r\n        <div class=\"loading\" v-if=\"isLoadingChambers\">\r\n          <v-progress-circular\r\n              :size=\"50\"\r\n              indeterminate\r\n              color=\"primary\"\r\n            ></v-progress-circular>\r\n        </div>\r\n        <small>Matrícula</small>\r\n        <v-text-field dense outlined v-model=\"codSicop\" type=\"number\" min=\"0\" @input=\"SendCodSicop(codSicop)\" hide-details></v-text-field>\r\n      </v-col>\r\n      <v-col cols=\"4\" sm=\"3\" md=\"7\" style=\"padding-left:10px;\">\r\n        <small>Tipo de Movimentação</small>\r\n        <v-radio-group v-model=\"rgTypeMove\" dense row style=\"margin:0;\">\r\n          <v-radio label=\"Por Câmara\" value=\"1\"></v-radio>\r\n          <v-radio label=\"Por Operador\" value=\"2\" ></v-radio>\r\n        </v-radio-group>\r\n         <hr>\r\n        <small>Tipo de Operação</small>\r\n        <v-radio-group v-model=\"rgTypeOperation\" row dense style=\"margin:0;\">\r\n          <v-radio label=\"Armazenado\" value=\"1\"></v-radio>\r\n          <v-radio label=\"Expedido\" value=\"2\" ></v-radio>\r\n          <v-radio label=\"Todos\" value=\"3\" ></v-radio>\r\n        </v-radio-group>\r\n         <hr>\r\n        <small>Turno</small>\r\n        <v-radio-group v-model=\"rgShift\" row dense style=\"margin:0;\">\r\n          <v-radio label=\"1º\" value=\"1\"></v-radio>\r\n          <v-radio label=\"2º\" value=\"2\" ></v-radio>\r\n          <v-radio label=\"3º\" value=\"3\" ></v-radio>\r\n          <v-radio label=\"Todos\" value=4 ></v-radio>\r\n        </v-radio-group>\r\n         <hr>\r\n      </v-col>\r\n      <v-col cols=\"2\" sm=\"2\" md=\"5\" style=\"padding-left:60px;padding-top:0;\">\r\n       <small class=\"text-title\">Data Inicial</small>\r\n        <v-menu v-model=\"menu\" :close-on-content-click=\"false\" :nudge-right=\"40\" transition=\"scale-transition\" offset-y min-width=\"290px\">\r\n          <template v-slot:activator=\"{ on, attrs }\">\r\n            <v-text-field  v-model=\"dateFormatted\" @blur=\"date = parseDate(dateFormatted)\" prepend-icon=\"mdi-calendar\" \r\n            readonly outlined hide-details dense v-bind=\"attrs\" v-on=\"on\" style=\"padding-top:5px;\"></v-text-field>\r\n          </template>\r\n          <v-date-picker v-model=\"date\" @input=\"setDate(date)\" locale=\"pt\" min=\"1950-01-01\" :max=\"dateMax\" ></v-date-picker>\r\n        </v-menu>\r\n      </v-col>\r\n      <v-col cols=\"2\" sm=\"2\" md=\"5\" style=\"padding-left:40px;padding-top:0;\">\r\n        <small class=\"text-title\">Data Final</small>\r\n        <v-menu v-model=\"menu2\" :close-on-content-click=\"false\" :nudge-right=\"40\" transition=\"scale-transition\" offset-y min-width=\"290px\">\r\n          <template v-slot:activator=\"{ on, attrs }\">\r\n            <v-text-field  v-model=\"dateFormatted2\" @blur=\"date2 = parseDate(dateFormatted2)\" prepend-icon=\"mdi-calendar\" \r\n            readonly outlined hide-details dense v-bind=\"attrs\" v-on=\"on\" style=\"padding-top:5px;\"></v-text-field>\r\n          </template>\r\n          <v-date-picker v-model=\"date2\" @input=\"setDate(date2)\" locale=\"pt\" min=\"1950-01-01\" :max=\"dateMax\" ></v-date-picker>\r\n        </v-menu>\r\n      </v-col>\r\n    </v-row>\r\n</template>\r\n<script lang=\"ts\">\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch\r\n} from 'vue-property-decorator';\r\nimport {\r\n  Action, Getter\r\n} from 'vuex-class';\r\n@Component\r\nexport default class MovimentoCamaraOperador extends Vue {\r\n  @Action getChambersByFilial\r\n\r\n  @Getter filialName\r\n  @Getter allChambers\r\n \r\n  @Prop() clearFields!: any; \r\n\r\n  private codSicop: any = null;\r\n  private idChambers: Array<any> = [];\r\n  private selectChambers: boolean = false;\r\n  private rgTypeMove: any = '1';\r\n  private rgShift: any = '4';\r\n  private rgTypeOperation: any = '3';\r\n  private menu: boolean = false;\r\n  private menu2: boolean = false;\r\n  private dateToSend: any = null;\r\n  private date = new Date().toISOString().substr(0, 10);\r\n  private dateFormatted = this.formatDate(new Date().toISOString().substr(0, 10))\r\n  private date2 = new Date().toISOString().substr(0, 10);\r\n  private dateFormatted2 = this.formatDate(new Date().toISOString().substr(0, 10))\r\n  private dateMax = new Date().toISOString().substr(0, 10);\r\n  private isLoadingChambers: boolean = false;\r\n\r\n\r\n  @Watch('clearFields')\r\n  public async onPropertyChangedsClearFields(value: any, oldValue: any): Promise < void > {\r\n    this.idChambers.splice(0, this.idChambers.length);\r\n    this.selectChambers = false;\r\n    this.rgTypeOperation = '3';\r\n    this.rgTypeMove = '1';\r\n    this.rgShift = '4';\r\n  }\r\n\r\n  @Watch('selectChambers')\r\n  public async onPropertyChangedsChamber(value: any, oldValue: any): Promise < void > {\r\n    if(value === true){\r\n      this.allChambers.forEach(chambers =>{\r\n        this.idChambers.push(chambers.cod_camara);\r\n      });\r\n    }else{\r\n      this.idChambers.splice(0, this.idChambers.length);\r\n    }\r\n  }\r\n\r\n  @Watch('date')\r\n  public async onPropertyChangedsDate(value: any, oldValue: any): Promise < void > {\r\n    this.dateFormatted = this.formatDate(value);\r\n    this.$emit('getInitialDate', value);\r\n  }\r\n\r\n  @Watch('date2')\r\n  public async onPropertyChangedsDate2(value: any, oldValue: any): Promise < void > {\r\n    this.dateFormatted2 = this.formatDate(value);\r\n    this.$emit('getEndDate', value);\r\n  }\r\n\r\n  @Watch('rgShift')\r\n  public async onPropertyChangedsShift(value: any, oldValue: any): Promise < void > {\r\n    this.$emit('getShift', value);\r\n  }\r\n\r\n  @Watch('rgTypeMove')\r\n  public async onPropertyChangedsMovement(value: any, oldValue: any): Promise < void > {\r\n    this.$emit('getMovement', value);\r\n  }\r\n\r\n  @Watch('rgTypeOperation')\r\n  public async onPropertyChangedsOperation(value: any, oldValue: any): Promise < void > {\r\n    this.$emit('getOperation', value);\r\n  }\r\n\r\n  @Watch('idChambers')\r\n  public async onPropertyChangedsChambers(value: any, oldValue: any): Promise < void > {\r\n    this.$emit('getIdChambers', value); \r\n     \r\n  }\r\n\r\n  public SendCodSicop(cod: any): void{\r\n    this.$emit('getCodSicop', cod);\r\n  }\r\n\r\n  public setDate(data: any): void {\r\n    this.dateToSend = data;\r\n    this.menu = false;\r\n    this.menu2 = false;\r\n  }\r\n\r\n  public formatDate(date: string): any {\r\n    if (!date) return null;\r\n    const [year, month, day] = date.split('-');\r\n    return `${day}/${month}/${year}`;\r\n  }\r\n\r\n  public parseDate(date: any): any {\r\n    if (!date) return null;\r\n\r\n    const [day, month, year] = date.split('/');\r\n    return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\r\n  }\r\n\r\n  public InitialParameters(): void{\r\n    this.$emit('getOperation', '3');\r\n    this.$emit('getMovement', '1');\r\n    this.$emit('getShift', '4');\r\n    this.$emit('getInitialDate', this.date);\r\n    this.$emit('getEndDate', this.date2);\r\n  }\r\n  \r\n  async mounted() {\r\n    if (this.allChambers === null) {\r\n      this.isLoadingChambers = true;\r\n      await this.getChambersByFilial({filial: this.filialName });\r\n      this.isLoadingChambers = false;\r\n    }\r\n    this.InitialParameters();\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.loading{\r\n  display:flex;\r\n  justify-content:center;\r\n}\r\n\r\n.content-checkbox{\r\n  display:flex;\r\n  flex-direction: row;\r\n  width: 80%;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.content-checkbox .item-checkbox{\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding-left: 10px;\r\n  transform: scale(0.95);\r\n  margin:0;\r\n}\r\n\r\n</style>"]}]}